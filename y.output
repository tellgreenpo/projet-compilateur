Nonterminals useless in grammar

    args
    term


Rules useless in grammar

   89 args: value COMMA args
   90     | value
   91     | %empty

   92 term: value
   93     | name


Rules useless in parser due to conflicts

   78 divMul: OPEN_PARENT arithmExpr CLOSE_PARENT


State 66 conflicts: 4 shift/reduce
State 67 conflicts: 4 shift/reduce
State 108 conflicts: 6 reduce/reduce
State 110 conflicts: 2 shift/reduce, 4 reduce/reduce
State 111 conflicts: 2 shift/reduce, 4 reduce/reduce
State 113 conflicts: 2 shift/reduce, 4 reduce/reduce
State 114 conflicts: 2 shift/reduce, 4 reduce/reduce
State 116 conflicts: 6 reduce/reduce
State 117 conflicts: 6 reduce/reduce
State 119 conflicts: 6 reduce/reduce
State 120 conflicts: 6 reduce/reduce
State 122 conflicts: 2 shift/reduce, 4 reduce/reduce
State 123 conflicts: 2 shift/reduce, 4 reduce/reduce
State 125 conflicts: 2 shift/reduce, 4 reduce/reduce
State 126 conflicts: 2 shift/reduce, 4 reduce/reduce
State 128 conflicts: 6 reduce/reduce
State 129 conflicts: 6 reduce/reduce
State 131 conflicts: 6 reduce/reduce
State 132 conflicts: 6 reduce/reduce
State 134 conflicts: 2 shift/reduce, 4 reduce/reduce
State 135 conflicts: 2 shift/reduce, 4 reduce/reduce
State 137 conflicts: 2 shift/reduce, 4 reduce/reduce
State 138 conflicts: 2 shift/reduce, 4 reduce/reduce
State 140 conflicts: 6 reduce/reduce
State 141 conflicts: 6 reduce/reduce
State 143 conflicts: 6 reduce/reduce
State 144 conflicts: 6 reduce/reduce


Grammar

    0 $accept: main_structure $end

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body

    2 $@1: %empty

    3 body: OPEN_BRACE $@1 declarations insts CLOSE_BRACE

    4 insts: inst insts
    5      | %empty

    6 inst: affectation
    7     | print
    8     | ifBlock
    9     | whileBlock
   10     | RETURN value SEMICOLON
   11     | RETURN name SEMICOLON

   12 params: type name COMMA params
   13       | type name
   14       | %empty

   15 declaration: type ids SEMICOLON
   16            | type id EQUAL value SEMICOLON

   17 declarations: declaration declarations
   18             | declaration

   19 affectation: name EQUAL arithmExpr SEMICOLON

   20 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON

   21 ifBlock: IF OPEN_PARENT condition CLOSE_PARENT body
   22        | ELSE IF OPEN_PARENT condition CLOSE_PARENT body
   23        | ELSE body

   24 whileBlock: WHILE OPEN_PARENT condition CLOSE_PARENT body

   25 condition: value
   26          | name
   27          | unaryOperand value
   28          | unaryOperand name
   29          | value binaryOperand value
   30          | value binaryOperand name
   31          | name binaryOperand value
   32          | name binaryOperand name

   33 binaryOperand: LESS
   34              | LESS_EQ
   35              | MORE
   36              | MORE_EQ
   37              | EQUALITY
   38              | DIFF

   39 unaryOperand: EXCLAM

   40 arithmExpr: value PLUS value
   41           | value PLUS name
   42           | name PLUS value
   43           | name PLUS name
   44           | value PLUS arithmExpr
   45           | name PLUS arithmExpr
   46           | arithmExpr PLUS value
   47           | arithmExpr PLUS name
   48           | arithmExpr PLUS arithmExpr
   49           | value MINUS value
   50           | value MINUS name
   51           | name MINUS value
   52           | name MINUS name
   53           | value MINUS arithmExpr
   54           | name MINUS arithmExpr
   55           | arithmExpr MINUS value
   56           | arithmExpr MINUS name
   57           | arithmExpr MINUS arithmExpr
   58           | OPEN_PARENT arithmExpr CLOSE_PARENT
   59           | divMul

   60 divMul: value MULTIPLY value
   61       | value MULTIPLY name
   62       | name MULTIPLY value
   63       | name MULTIPLY name
   64       | value MULTIPLY arithmExpr
   65       | name MULTIPLY arithmExpr
   66       | arithmExpr MULTIPLY value
   67       | arithmExpr MULTIPLY name
   68       | arithmExpr MULTIPLY arithmExpr
   69       | value DIVIDE value
   70       | value DIVIDE name
   71       | name DIVIDE value
   72       | name DIVIDE name
   73       | value DIVIDE arithmExpr
   74       | name DIVIDE arithmExpr
   75       | arithmExpr DIVIDE value
   76       | arithmExpr DIVIDE name
   77       | arithmExpr DIVIDE arithmExpr
   78       | OPEN_PARENT arithmExpr CLOSE_PARENT
   79       | value
   80       | name

   81 value: NUMBER
   82      | EXPON

   83 type: INT
   84     | CONST INT

   85 name: ALPHA

   86 id: ALPHA

   87 ids: id COMMA ids
   88    | id


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    MAIN (258) 1
    RETURN (259) 10 11
    PRINTF (260) 20
    CONST (261) 84
    COMMA (262) 12 87
    SEMICOLON (263) 10 11 15 16 19 20
    OPEN_BRACE (264) 3
    CLOSE_BRACE (265) 3
    OPEN_PARENT (266) 1 20 21 22 24 58 78
    CLOSE_PARENT (267) 1 20 21 22 24 58 78
    IF (268) 21 22
    ELSE (269) 22 23
    WHILE (270) 24
    EXCLAM (271) 39
    EQUALITY (272) 37
    DIFF (273) 38
    LESS (274) 33
    MORE (275) 35
    LESS_EQ (276) 34
    MORE_EQ (277) 36
    NUMBER <nb> (278) 81
    EXPON <nb> (279) 82
    ALPHA <str> (280) 85 86
    INT <str> (281) 83 84
    EQUAL (282) 16 19
    PLUS (283) 40 41 42 43 44 45 46 47 48
    MINUS (284) 49 50 51 52 53 54 55 56 57
    MULTIPLY (285) 60 61 62 63 64 65 66 67 68
    DIVIDE (286) 69 70 71 72 73 74 75 76 77


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    main_structure (33)
        on left: 1
        on right: 0
    body (34)
        on left: 3
        on right: 1 21 22 23 24
    $@1 (35)
        on left: 2
        on right: 3
    insts (36)
        on left: 4 5
        on right: 3 4
    inst (37)
        on left: 6 7 8 9 10 11
        on right: 4
    params (38)
        on left: 12 13 14
        on right: 1 12
    declaration (39)
        on left: 15 16
        on right: 17 18
    declarations (40)
        on left: 17 18
        on right: 3 17
    affectation (41)
        on left: 19
        on right: 6
    print (42)
        on left: 20
        on right: 7
    ifBlock (43)
        on left: 21 22 23
        on right: 8
    whileBlock (44)
        on left: 24
        on right: 9
    condition (45)
        on left: 25 26 27 28 29 30 31 32
        on right: 21 22 24
    binaryOperand (46)
        on left: 33 34 35 36 37 38
        on right: 29 30 31 32
    unaryOperand (47)
        on left: 39
        on right: 27 28
    arithmExpr <nb> (48)
        on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 19 44 45 46 47 48 53 54 55 56 57 58 64 65 66 67 68 73 74 75 76 77 78
    divMul <nb> (49)
        on left: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 59
    value <nb> (50)
        on left: 81 82
        on right: 10 16 20 25 27 29 30 31 40 41 42 44 46 49 50 51 53 55 60 61 62 64 66 69 70 71 73 75 79
    type <nb> (51)
        on left: 83 84
        on right: 1 12 13 15 16
    name <str> (52)
        on left: 85
        on right: 11 12 13 19 26 28 30 31 32 41 42 43 45 47 50 51 52 54 56 61 62 63 65 67 70 71 72 74 76 80
    id <str> (53)
        on left: 86
        on right: 16 87 88
    ids (54)
        on left: 87 88
        on right: 15 87


State 0

    0 $accept: . main_structure $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    main_structure  go to state 3
    type            go to state 4


State 1

   84 type: CONST . INT

    INT  shift, and go to state 5


State 2

   83 type: INT .

    $default  reduce using rule 83 (type)


State 3

    0 $accept: main_structure . $end

    $end  shift, and go to state 6


State 4

    1 main_structure: type . MAIN OPEN_PARENT params CLOSE_PARENT body

    MAIN  shift, and go to state 7


State 5

   84 type: CONST INT .

    $default  reduce using rule 84 (type)


State 6

    0 $accept: main_structure $end .

    $default  accept


State 7

    1 main_structure: type MAIN . OPEN_PARENT params CLOSE_PARENT body

    OPEN_PARENT  shift, and go to state 8


State 8

    1 main_structure: type MAIN OPEN_PARENT . params CLOSE_PARENT body

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    $default  reduce using rule 14 (params)

    params  go to state 9
    type    go to state 10


State 9

    1 main_structure: type MAIN OPEN_PARENT params . CLOSE_PARENT body

    CLOSE_PARENT  shift, and go to state 11


State 10

   12 params: type . name COMMA params
   13       | type . name

    ALPHA  shift, and go to state 12

    name  go to state 13


State 11

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 15


State 12

   85 name: ALPHA .

    $default  reduce using rule 85 (name)


State 13

   12 params: type name . COMMA params
   13       | type name .

    COMMA  shift, and go to state 16

    $default  reduce using rule 13 (params)


State 14

    3 body: OPEN_BRACE . $@1 declarations insts CLOSE_BRACE

    $default  reduce using rule 2 ($@1)

    $@1  go to state 17


State 15

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body .

    $default  reduce using rule 1 (main_structure)


State 16

   12 params: type name COMMA . params

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    $default  reduce using rule 14 (params)

    params  go to state 18
    type    go to state 10


State 17

    3 body: OPEN_BRACE $@1 . declarations insts CLOSE_BRACE

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    declaration   go to state 19
    declarations  go to state 20
    type          go to state 21


State 18

   12 params: type name COMMA params .

    $default  reduce using rule 12 (params)


State 19

   17 declarations: declaration . declarations
   18             | declaration .

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    $default  reduce using rule 18 (declarations)

    declaration   go to state 19
    declarations  go to state 22
    type          go to state 21


State 20

    3 body: OPEN_BRACE $@1 declarations . insts CLOSE_BRACE

    RETURN  shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    ELSE    shift, and go to state 26
    WHILE   shift, and go to state 27
    ALPHA   shift, and go to state 12

    $default  reduce using rule 5 (insts)

    insts        go to state 28
    inst         go to state 29
    affectation  go to state 30
    print        go to state 31
    ifBlock      go to state 32
    whileBlock   go to state 33
    name         go to state 34


State 21

   15 declaration: type . ids SEMICOLON
   16            | type . id EQUAL value SEMICOLON

    ALPHA  shift, and go to state 35

    id   go to state 36
    ids  go to state 37


State 22

   17 declarations: declaration declarations .

    $default  reduce using rule 17 (declarations)


State 23

   10 inst: RETURN . value SEMICOLON
   11     | RETURN . name SEMICOLON

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 40
    name   go to state 41


State 24

   20 print: PRINTF . OPEN_PARENT value CLOSE_PARENT SEMICOLON

    OPEN_PARENT  shift, and go to state 42


State 25

   21 ifBlock: IF . OPEN_PARENT condition CLOSE_PARENT body

    OPEN_PARENT  shift, and go to state 43


State 26

   22 ifBlock: ELSE . IF OPEN_PARENT condition CLOSE_PARENT body
   23        | ELSE . body

    OPEN_BRACE  shift, and go to state 14
    IF          shift, and go to state 44

    body  go to state 45


State 27

   24 whileBlock: WHILE . OPEN_PARENT condition CLOSE_PARENT body

    OPEN_PARENT  shift, and go to state 46


State 28

    3 body: OPEN_BRACE $@1 declarations insts . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 47


State 29

    4 insts: inst . insts

    RETURN  shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    ELSE    shift, and go to state 26
    WHILE   shift, and go to state 27
    ALPHA   shift, and go to state 12

    $default  reduce using rule 5 (insts)

    insts        go to state 48
    inst         go to state 29
    affectation  go to state 30
    print        go to state 31
    ifBlock      go to state 32
    whileBlock   go to state 33
    name         go to state 34


State 30

    6 inst: affectation .

    $default  reduce using rule 6 (inst)


State 31

    7 inst: print .

    $default  reduce using rule 7 (inst)


State 32

    8 inst: ifBlock .

    $default  reduce using rule 8 (inst)


State 33

    9 inst: whileBlock .

    $default  reduce using rule 9 (inst)


State 34

   19 affectation: name . EQUAL arithmExpr SEMICOLON

    EQUAL  shift, and go to state 49


State 35

   86 id: ALPHA .

    $default  reduce using rule 86 (id)


State 36

   16 declaration: type id . EQUAL value SEMICOLON
   87 ids: id . COMMA ids
   88    | id .

    COMMA  shift, and go to state 50
    EQUAL  shift, and go to state 51

    $default  reduce using rule 88 (ids)


State 37

   15 declaration: type ids . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 38

   81 value: NUMBER .

    $default  reduce using rule 81 (value)


State 39

   82 value: EXPON .

    $default  reduce using rule 82 (value)


State 40

   10 inst: RETURN value . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 41

   11 inst: RETURN name . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 42

   20 print: PRINTF OPEN_PARENT . value CLOSE_PARENT SEMICOLON

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39

    value  go to state 55


State 43

   21 ifBlock: IF OPEN_PARENT . condition CLOSE_PARENT body

    EXCLAM  shift, and go to state 56
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 57
    unaryOperand  go to state 58
    value         go to state 59
    name          go to state 60


State 44

   22 ifBlock: ELSE IF . OPEN_PARENT condition CLOSE_PARENT body

    OPEN_PARENT  shift, and go to state 61


State 45

   23 ifBlock: ELSE body .

    $default  reduce using rule 23 (ifBlock)


State 46

   24 whileBlock: WHILE OPEN_PARENT . condition CLOSE_PARENT body

    EXCLAM  shift, and go to state 56
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 62
    unaryOperand  go to state 58
    value         go to state 59
    name          go to state 60


State 47

    3 body: OPEN_BRACE $@1 declarations insts CLOSE_BRACE .

    $default  reduce using rule 3 (body)


State 48

    4 insts: inst insts .

    $default  reduce using rule 4 (insts)


State 49

   19 affectation: name EQUAL . arithmExpr SEMICOLON

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 64
    divMul      go to state 65
    value       go to state 66
    name        go to state 67


State 50

   87 ids: id COMMA . ids

    ALPHA  shift, and go to state 35

    id   go to state 68
    ids  go to state 69


State 51

   16 declaration: type id EQUAL . value SEMICOLON

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39

    value  go to state 70


State 52

   15 declaration: type ids SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 53

   10 inst: RETURN value SEMICOLON .

    $default  reduce using rule 10 (inst)


State 54

   11 inst: RETURN name SEMICOLON .

    $default  reduce using rule 11 (inst)


State 55

   20 print: PRINTF OPEN_PARENT value . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  shift, and go to state 71


State 56

   39 unaryOperand: EXCLAM .

    $default  reduce using rule 39 (unaryOperand)


State 57

   21 ifBlock: IF OPEN_PARENT condition . CLOSE_PARENT body

    CLOSE_PARENT  shift, and go to state 72


State 58

   27 condition: unaryOperand . value
   28          | unaryOperand . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 73
    name   go to state 74


State 59

   25 condition: value .
   29          | value . binaryOperand value
   30          | value . binaryOperand name

    EQUALITY  shift, and go to state 75
    DIFF      shift, and go to state 76
    LESS      shift, and go to state 77
    MORE      shift, and go to state 78
    LESS_EQ   shift, and go to state 79
    MORE_EQ   shift, and go to state 80

    $default  reduce using rule 25 (condition)

    binaryOperand  go to state 81


State 60

   26 condition: name .
   31          | name . binaryOperand value
   32          | name . binaryOperand name

    EQUALITY  shift, and go to state 75
    DIFF      shift, and go to state 76
    LESS      shift, and go to state 77
    MORE      shift, and go to state 78
    LESS_EQ   shift, and go to state 79
    MORE_EQ   shift, and go to state 80

    $default  reduce using rule 26 (condition)

    binaryOperand  go to state 82


State 61

   22 ifBlock: ELSE IF OPEN_PARENT . condition CLOSE_PARENT body

    EXCLAM  shift, and go to state 56
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 83
    unaryOperand  go to state 58
    value         go to state 59
    name          go to state 60


State 62

   24 whileBlock: WHILE OPEN_PARENT condition . CLOSE_PARENT body

    CLOSE_PARENT  shift, and go to state 84


State 63

   58 arithmExpr: OPEN_PARENT . arithmExpr CLOSE_PARENT
   78 divMul: OPEN_PARENT . arithmExpr CLOSE_PARENT

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 85
    divMul      go to state 65
    value       go to state 66
    name        go to state 67


State 64

   19 affectation: name EQUAL arithmExpr . SEMICOLON
   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    SEMICOLON  shift, and go to state 86
    PLUS       shift, and go to state 87
    MINUS      shift, and go to state 88
    MULTIPLY   shift, and go to state 89
    DIVIDE     shift, and go to state 90


State 65

   59 arithmExpr: divMul .

    $default  reduce using rule 59 (arithmExpr)


State 66

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    PLUS      shift, and go to state 91
    MINUS     shift, and go to state 92
    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    PLUS      [reduce using rule 79 (divMul)]
    MINUS     [reduce using rule 79 (divMul)]
    MULTIPLY  [reduce using rule 79 (divMul)]
    DIVIDE    [reduce using rule 79 (divMul)]
    $default  reduce using rule 79 (divMul)


State 67

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    PLUS      shift, and go to state 95
    MINUS     shift, and go to state 96
    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    PLUS      [reduce using rule 80 (divMul)]
    MINUS     [reduce using rule 80 (divMul)]
    MULTIPLY  [reduce using rule 80 (divMul)]
    DIVIDE    [reduce using rule 80 (divMul)]
    $default  reduce using rule 80 (divMul)


State 68

   87 ids: id . COMMA ids
   88    | id .

    COMMA  shift, and go to state 50

    $default  reduce using rule 88 (ids)


State 69

   87 ids: id COMMA ids .

    $default  reduce using rule 87 (ids)


State 70

   16 declaration: type id EQUAL value . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 71

   20 print: PRINTF OPEN_PARENT value CLOSE_PARENT . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 72

   21 ifBlock: IF OPEN_PARENT condition CLOSE_PARENT . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 101


State 73

   27 condition: unaryOperand value .

    $default  reduce using rule 27 (condition)


State 74

   28 condition: unaryOperand name .

    $default  reduce using rule 28 (condition)


State 75

   37 binaryOperand: EQUALITY .

    $default  reduce using rule 37 (binaryOperand)


State 76

   38 binaryOperand: DIFF .

    $default  reduce using rule 38 (binaryOperand)


State 77

   33 binaryOperand: LESS .

    $default  reduce using rule 33 (binaryOperand)


State 78

   35 binaryOperand: MORE .

    $default  reduce using rule 35 (binaryOperand)


State 79

   34 binaryOperand: LESS_EQ .

    $default  reduce using rule 34 (binaryOperand)


State 80

   36 binaryOperand: MORE_EQ .

    $default  reduce using rule 36 (binaryOperand)


State 81

   29 condition: value binaryOperand . value
   30          | value binaryOperand . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 102
    name   go to state 103


State 82

   31 condition: name binaryOperand . value
   32          | name binaryOperand . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 104
    name   go to state 105


State 83

   22 ifBlock: ELSE IF OPEN_PARENT condition . CLOSE_PARENT body

    CLOSE_PARENT  shift, and go to state 106


State 84

   24 whileBlock: WHILE OPEN_PARENT condition CLOSE_PARENT . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 107


State 85

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   58           | OPEN_PARENT arithmExpr . CLOSE_PARENT
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr
   78       | OPEN_PARENT arithmExpr . CLOSE_PARENT

    CLOSE_PARENT  shift, and go to state 108
    PLUS          shift, and go to state 87
    MINUS         shift, and go to state 88
    MULTIPLY      shift, and go to state 89
    DIVIDE        shift, and go to state 90


State 86

   19 affectation: name EQUAL arithmExpr SEMICOLON .

    $default  reduce using rule 19 (affectation)


State 87

   46 arithmExpr: arithmExpr PLUS . value
   47           | arithmExpr PLUS . name
   48           | arithmExpr PLUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 109
    divMul      go to state 65
    value       go to state 110
    name        go to state 111


State 88

   55 arithmExpr: arithmExpr MINUS . value
   56           | arithmExpr MINUS . name
   57           | arithmExpr MINUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 112
    divMul      go to state 65
    value       go to state 113
    name        go to state 114


State 89

   66 divMul: arithmExpr MULTIPLY . value
   67       | arithmExpr MULTIPLY . name
   68       | arithmExpr MULTIPLY . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 115
    divMul      go to state 65
    value       go to state 116
    name        go to state 117


State 90

   75 divMul: arithmExpr DIVIDE . value
   76       | arithmExpr DIVIDE . name
   77       | arithmExpr DIVIDE . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 118
    divMul      go to state 65
    value       go to state 119
    name        go to state 120


State 91

   40 arithmExpr: value PLUS . value
   41           | value PLUS . name
   44           | value PLUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 121
    divMul      go to state 65
    value       go to state 122
    name        go to state 123


State 92

   49 arithmExpr: value MINUS . value
   50           | value MINUS . name
   53           | value MINUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 124
    divMul      go to state 65
    value       go to state 125
    name        go to state 126


State 93

   60 divMul: value MULTIPLY . value
   61       | value MULTIPLY . name
   64       | value MULTIPLY . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 127
    divMul      go to state 65
    value       go to state 128
    name        go to state 129


State 94

   69 divMul: value DIVIDE . value
   70       | value DIVIDE . name
   73       | value DIVIDE . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 130
    divMul      go to state 65
    value       go to state 131
    name        go to state 132


State 95

   42 arithmExpr: name PLUS . value
   43           | name PLUS . name
   45           | name PLUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 133
    divMul      go to state 65
    value       go to state 134
    name        go to state 135


State 96

   51 arithmExpr: name MINUS . value
   52           | name MINUS . name
   54           | name MINUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 136
    divMul      go to state 65
    value       go to state 137
    name        go to state 138


State 97

   62 divMul: name MULTIPLY . value
   63       | name MULTIPLY . name
   65       | name MULTIPLY . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 139
    divMul      go to state 65
    value       go to state 140
    name        go to state 141


State 98

   71 divMul: name DIVIDE . value
   72       | name DIVIDE . name
   74       | name DIVIDE . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 142
    divMul      go to state 65
    value       go to state 143
    name        go to state 144


State 99

   16 declaration: type id EQUAL value SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 100

   20 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON .

    $default  reduce using rule 20 (print)


State 101

   21 ifBlock: IF OPEN_PARENT condition CLOSE_PARENT body .

    $default  reduce using rule 21 (ifBlock)


State 102

   29 condition: value binaryOperand value .

    $default  reduce using rule 29 (condition)


State 103

   30 condition: value binaryOperand name .

    $default  reduce using rule 30 (condition)


State 104

   31 condition: name binaryOperand value .

    $default  reduce using rule 31 (condition)


State 105

   32 condition: name binaryOperand name .

    $default  reduce using rule 32 (condition)


State 106

   22 ifBlock: ELSE IF OPEN_PARENT condition CLOSE_PARENT . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 145


State 107

   24 whileBlock: WHILE OPEN_PARENT condition CLOSE_PARENT body .

    $default  reduce using rule 24 (whileBlock)


State 108

   58 arithmExpr: OPEN_PARENT arithmExpr CLOSE_PARENT .
   78 divMul: OPEN_PARENT arithmExpr CLOSE_PARENT .

    SEMICOLON     reduce using rule 58 (arithmExpr)
    SEMICOLON     [reduce using rule 78 (divMul)]
    CLOSE_PARENT  reduce using rule 58 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 78 (divMul)]
    PLUS          reduce using rule 58 (arithmExpr)
    PLUS          [reduce using rule 78 (divMul)]
    MINUS         reduce using rule 58 (arithmExpr)
    MINUS         [reduce using rule 78 (divMul)]
    MULTIPLY      reduce using rule 58 (arithmExpr)
    MULTIPLY      [reduce using rule 78 (divMul)]
    DIVIDE        reduce using rule 58 (arithmExpr)
    DIVIDE        [reduce using rule 78 (divMul)]
    $default      reduce using rule 58 (arithmExpr)


State 109

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   48           | arithmExpr PLUS arithmExpr .
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 89
    DIVIDE    shift, and go to state 90

    $default  reduce using rule 48 (arithmExpr)


State 110

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   46           | arithmExpr PLUS value .
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    SEMICOLON     reduce using rule 46 (arithmExpr)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 46 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 46 (arithmExpr)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 46 (arithmExpr)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 46 (arithmExpr)


State 111

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   47           | arithmExpr PLUS name .
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    SEMICOLON     reduce using rule 47 (arithmExpr)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 47 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 47 (arithmExpr)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 47 (arithmExpr)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 47 (arithmExpr)


State 112

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   57           | arithmExpr MINUS arithmExpr .
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 89
    DIVIDE    shift, and go to state 90

    $default  reduce using rule 57 (arithmExpr)


State 113

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   55           | arithmExpr MINUS value .
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    SEMICOLON     reduce using rule 55 (arithmExpr)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 55 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 55 (arithmExpr)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 55 (arithmExpr)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 55 (arithmExpr)


State 114

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   56           | arithmExpr MINUS name .
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    SEMICOLON     reduce using rule 56 (arithmExpr)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 56 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 56 (arithmExpr)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 56 (arithmExpr)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 56 (arithmExpr)


State 115

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   68       | arithmExpr MULTIPLY arithmExpr .
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 68 (divMul)


State 116

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   66       | arithmExpr MULTIPLY value .
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    SEMICOLON     reduce using rule 66 (divMul)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 66 (divMul)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 66 (divMul)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 66 (divMul)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      reduce using rule 66 (divMul)
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        reduce using rule 66 (divMul)
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 66 (divMul)


State 117

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   67       | arithmExpr MULTIPLY name .
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    SEMICOLON     reduce using rule 67 (divMul)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 67 (divMul)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 67 (divMul)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 67 (divMul)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      reduce using rule 67 (divMul)
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        reduce using rule 67 (divMul)
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 67 (divMul)


State 118

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr
   77       | arithmExpr DIVIDE arithmExpr .

    $default  reduce using rule 77 (divMul)


State 119

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   75       | arithmExpr DIVIDE value .
   79       | value .

    SEMICOLON     reduce using rule 75 (divMul)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 75 (divMul)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 75 (divMul)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 75 (divMul)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      reduce using rule 75 (divMul)
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        reduce using rule 75 (divMul)
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 75 (divMul)


State 120

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   76       | arithmExpr DIVIDE name .
   80       | name .

    SEMICOLON     reduce using rule 76 (divMul)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 76 (divMul)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 76 (divMul)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 76 (divMul)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      reduce using rule 76 (divMul)
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        reduce using rule 76 (divMul)
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 76 (divMul)


State 121

   44 arithmExpr: value PLUS arithmExpr .
   46           | arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 89
    DIVIDE    shift, and go to state 90

    $default  reduce using rule 44 (arithmExpr)


State 122

   40 arithmExpr: value . PLUS value
   40           | value PLUS value .
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    SEMICOLON     reduce using rule 40 (arithmExpr)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 40 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 40 (arithmExpr)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 40 (arithmExpr)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 40 (arithmExpr)


State 123

   41 arithmExpr: value PLUS name .
   42           | name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    SEMICOLON     reduce using rule 41 (arithmExpr)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 41 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 41 (arithmExpr)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 41 (arithmExpr)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 41 (arithmExpr)


State 124

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   53           | value MINUS arithmExpr .
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 89
    DIVIDE    shift, and go to state 90

    $default  reduce using rule 53 (arithmExpr)


State 125

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   49           | value MINUS value .
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    SEMICOLON     reduce using rule 49 (arithmExpr)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 49 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 49 (arithmExpr)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 49 (arithmExpr)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 49 (arithmExpr)


State 126

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   50           | value MINUS name .
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    SEMICOLON     reduce using rule 50 (arithmExpr)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 50 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 50 (arithmExpr)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 50 (arithmExpr)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 50 (arithmExpr)


State 127

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   64 divMul: value MULTIPLY arithmExpr .
   66       | arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 64 (divMul)


State 128

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   60       | value MULTIPLY value .
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    SEMICOLON     reduce using rule 60 (divMul)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 60 (divMul)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 60 (divMul)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 60 (divMul)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      reduce using rule 60 (divMul)
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        reduce using rule 60 (divMul)
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 60 (divMul)


State 129

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   61 divMul: value MULTIPLY name .
   62       | name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    SEMICOLON     reduce using rule 61 (divMul)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 61 (divMul)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 61 (divMul)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 61 (divMul)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      reduce using rule 61 (divMul)
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        reduce using rule 61 (divMul)
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 61 (divMul)


State 130

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   73       | value DIVIDE arithmExpr .
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 73 (divMul)


State 131

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   69       | value DIVIDE value .
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    SEMICOLON     reduce using rule 69 (divMul)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 69 (divMul)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 69 (divMul)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 69 (divMul)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      reduce using rule 69 (divMul)
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        reduce using rule 69 (divMul)
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 69 (divMul)


State 132

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   70       | value DIVIDE name .
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    SEMICOLON     reduce using rule 70 (divMul)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 70 (divMul)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 70 (divMul)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 70 (divMul)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      reduce using rule 70 (divMul)
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        reduce using rule 70 (divMul)
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 70 (divMul)


State 133

   45 arithmExpr: name PLUS arithmExpr .
   46           | arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 89
    DIVIDE    shift, and go to state 90

    $default  reduce using rule 45 (arithmExpr)


State 134

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   42           | name PLUS value .
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    SEMICOLON     reduce using rule 42 (arithmExpr)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 42 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 42 (arithmExpr)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 42 (arithmExpr)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 42 (arithmExpr)


State 135

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   43           | name PLUS name .
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    SEMICOLON     reduce using rule 43 (arithmExpr)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 43 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 43 (arithmExpr)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 43 (arithmExpr)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 43 (arithmExpr)


State 136

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   54           | name MINUS arithmExpr .
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 89
    DIVIDE    shift, and go to state 90

    $default  reduce using rule 54 (arithmExpr)


State 137

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   51           | name MINUS value .
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    MULTIPLY  shift, and go to state 93
    DIVIDE    shift, and go to state 94

    SEMICOLON     reduce using rule 51 (arithmExpr)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 51 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 51 (arithmExpr)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 51 (arithmExpr)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 51 (arithmExpr)


State 138

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   52           | name MINUS name .
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    MULTIPLY  shift, and go to state 97
    DIVIDE    shift, and go to state 98

    SEMICOLON     reduce using rule 52 (arithmExpr)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 52 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 52 (arithmExpr)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 52 (arithmExpr)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 52 (arithmExpr)


State 139

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   65 divMul: name MULTIPLY arithmExpr .
   66       | arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 65 (divMul)


State 140

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   62       | name MULTIPLY value .
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   73       | value . DIVIDE arithmExpr
   79       | value .

    SEMICOLON     reduce using rule 62 (divMul)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 62 (divMul)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 62 (divMul)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 62 (divMul)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      reduce using rule 62 (divMul)
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        reduce using rule 62 (divMul)
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 62 (divMul)


State 141

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   63       | name MULTIPLY name .
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   74       | name . DIVIDE arithmExpr
   80       | name .

    SEMICOLON     reduce using rule 63 (divMul)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 63 (divMul)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 63 (divMul)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 63 (divMul)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      reduce using rule 63 (divMul)
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        reduce using rule 63 (divMul)
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 63 (divMul)


State 142

   46 arithmExpr: arithmExpr . PLUS value
   47           | arithmExpr . PLUS name
   48           | arithmExpr . PLUS arithmExpr
   55           | arithmExpr . MINUS value
   56           | arithmExpr . MINUS name
   57           | arithmExpr . MINUS arithmExpr
   66 divMul: arithmExpr . MULTIPLY value
   67       | arithmExpr . MULTIPLY name
   68       | arithmExpr . MULTIPLY arithmExpr
   74       | name DIVIDE arithmExpr .
   75       | arithmExpr . DIVIDE value
   76       | arithmExpr . DIVIDE name
   77       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 74 (divMul)


State 143

   40 arithmExpr: value . PLUS value
   41           | value . PLUS name
   44           | value . PLUS arithmExpr
   49           | value . MINUS value
   50           | value . MINUS name
   53           | value . MINUS arithmExpr
   60 divMul: value . MULTIPLY value
   61       | value . MULTIPLY name
   64       | value . MULTIPLY arithmExpr
   69       | value . DIVIDE value
   70       | value . DIVIDE name
   71       | name DIVIDE value .
   73       | value . DIVIDE arithmExpr
   79       | value .

    SEMICOLON     reduce using rule 71 (divMul)
    SEMICOLON     [reduce using rule 79 (divMul)]
    CLOSE_PARENT  reduce using rule 71 (divMul)
    CLOSE_PARENT  [reduce using rule 79 (divMul)]
    PLUS          reduce using rule 71 (divMul)
    PLUS          [reduce using rule 79 (divMul)]
    MINUS         reduce using rule 71 (divMul)
    MINUS         [reduce using rule 79 (divMul)]
    MULTIPLY      reduce using rule 71 (divMul)
    MULTIPLY      [reduce using rule 79 (divMul)]
    DIVIDE        reduce using rule 71 (divMul)
    DIVIDE        [reduce using rule 79 (divMul)]
    $default      reduce using rule 71 (divMul)


State 144

   42 arithmExpr: name . PLUS value
   43           | name . PLUS name
   45           | name . PLUS arithmExpr
   51           | name . MINUS value
   52           | name . MINUS name
   54           | name . MINUS arithmExpr
   62 divMul: name . MULTIPLY value
   63       | name . MULTIPLY name
   65       | name . MULTIPLY arithmExpr
   71       | name . DIVIDE value
   72       | name . DIVIDE name
   72       | name DIVIDE name .
   74       | name . DIVIDE arithmExpr
   80       | name .

    SEMICOLON     reduce using rule 72 (divMul)
    SEMICOLON     [reduce using rule 80 (divMul)]
    CLOSE_PARENT  reduce using rule 72 (divMul)
    CLOSE_PARENT  [reduce using rule 80 (divMul)]
    PLUS          reduce using rule 72 (divMul)
    PLUS          [reduce using rule 80 (divMul)]
    MINUS         reduce using rule 72 (divMul)
    MINUS         [reduce using rule 80 (divMul)]
    MULTIPLY      reduce using rule 72 (divMul)
    MULTIPLY      [reduce using rule 80 (divMul)]
    DIVIDE        reduce using rule 72 (divMul)
    DIVIDE        [reduce using rule 80 (divMul)]
    $default      reduce using rule 72 (divMul)


State 145

   22 ifBlock: ELSE IF OPEN_PARENT condition CLOSE_PARENT body .

    $default  reduce using rule 22 (ifBlock)

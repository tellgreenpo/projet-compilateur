Nonterminals useless in grammar

    args
    term


Rules useless in grammar

  114 args: value COMMA args
  115     | value
  116     | %empty

  117 term: value
  118     | name


Rules useless in parser due to conflicts

   30 condition: unaryOperand value
   31          | unaryOperand name

  103 divMul: OPEN_PARENT arithmExpr CLOSE_PARENT


State 58 conflicts: 6 shift/reduce
State 59 conflicts: 6 shift/reduce
State 66 conflicts: 4 shift/reduce
State 67 conflicts: 4 shift/reduce
State 80 conflicts: 6 shift/reduce
State 81 conflicts: 6 shift/reduce, 7 reduce/reduce
State 82 conflicts: 6 shift/reduce, 7 reduce/reduce
State 113 conflicts: 6 shift/reduce
State 139 conflicts: 6 reduce/reduce
State 141 conflicts: 2 shift/reduce, 4 reduce/reduce
State 142 conflicts: 2 shift/reduce, 4 reduce/reduce
State 144 conflicts: 2 shift/reduce, 4 reduce/reduce
State 145 conflicts: 2 shift/reduce, 4 reduce/reduce
State 147 conflicts: 6 reduce/reduce
State 148 conflicts: 6 reduce/reduce
State 150 conflicts: 6 reduce/reduce
State 151 conflicts: 6 reduce/reduce
State 153 conflicts: 2 shift/reduce, 4 reduce/reduce
State 154 conflicts: 2 shift/reduce, 4 reduce/reduce
State 156 conflicts: 2 shift/reduce, 4 reduce/reduce
State 157 conflicts: 2 shift/reduce, 4 reduce/reduce
State 159 conflicts: 6 reduce/reduce
State 160 conflicts: 6 reduce/reduce
State 162 conflicts: 6 reduce/reduce
State 163 conflicts: 6 reduce/reduce
State 165 conflicts: 2 shift/reduce, 4 reduce/reduce
State 166 conflicts: 2 shift/reduce, 4 reduce/reduce
State 168 conflicts: 2 shift/reduce, 4 reduce/reduce
State 169 conflicts: 2 shift/reduce, 4 reduce/reduce
State 171 conflicts: 6 reduce/reduce
State 172 conflicts: 6 reduce/reduce
State 174 conflicts: 6 reduce/reduce
State 175 conflicts: 6 reduce/reduce


Grammar

    0 $accept: main_structure $end

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body

    2 $@1: %empty

    3 body: OPEN_BRACE $@1 declarations insts CLOSE_BRACE

    4 insts: inst insts
    5      | %empty

    6 inst: affectation
    7     | print
    8     | ifBlock
    9     | whileBlock
   10     | RETURN value SEMICOLON
   11     | RETURN name SEMICOLON

   12 params: type name COMMA params
   13       | type name
   14       | %empty

   15 declaration: type ids SEMICOLON
   16            | type id EQUAL value SEMICOLON

   17 declarations: declaration declarations
   18             | declaration

   19 affectation: name EQUAL arithmExpr SEMICOLON

   20 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON

   21 $@2: %empty

   22 if: IF OPEN_PARENT condition CLOSE_PARENT $@2 body

   23 ifBlock: if ELSE if
   24        | if ELSE body

   25 $@3: %empty

   26 $@4: %empty

   27 whileBlock: WHILE $@3 OPEN_PARENT condition CLOSE_PARENT $@4 body

   28 condition: value
   29          | name
   30          | unaryOperand value
   31          | unaryOperand name
   32          | value LESS value
   33          | value LESS_EQ value
   34          | value MORE value
   35          | value MORE_EQ value
   36          | value EQUALITY value
   37          | value DIFF value
   38          | value LESS name
   39          | value LESS_EQ name
   40          | value MORE name
   41          | value MORE_EQ name
   42          | value EQUALITY name
   43          | value DIFF name
   44          | name LESS value
   45          | name LESS_EQ value
   46          | name MORE value
   47          | name MORE_EQ value
   48          | name EQUALITY value
   49          | name DIFF value
   50          | name LESS name
   51          | name LESS_EQ name
   52          | name MORE name
   53          | name MORE_EQ name
   54          | name EQUALITY name
   55          | name DIFF name
   56          | condition binaryOperand condition
   57          | unaryOperand condition

   58 binaryOperand: LESS
   59              | LESS_EQ
   60              | MORE
   61              | MORE_EQ
   62              | EQUALITY
   63              | DIFF

   64 unaryOperand: EXCLAM

   65 arithmExpr: value PLUS value
   66           | value PLUS name
   67           | name PLUS value
   68           | name PLUS name
   69           | value PLUS arithmExpr
   70           | name PLUS arithmExpr
   71           | arithmExpr PLUS value
   72           | arithmExpr PLUS name
   73           | arithmExpr PLUS arithmExpr
   74           | value MINUS value
   75           | value MINUS name
   76           | name MINUS value
   77           | name MINUS name
   78           | value MINUS arithmExpr
   79           | name MINUS arithmExpr
   80           | arithmExpr MINUS value
   81           | arithmExpr MINUS name
   82           | arithmExpr MINUS arithmExpr
   83           | OPEN_PARENT arithmExpr CLOSE_PARENT
   84           | divMul

   85 divMul: value MULTIPLY value
   86       | value MULTIPLY name
   87       | name MULTIPLY value
   88       | name MULTIPLY name
   89       | value MULTIPLY arithmExpr
   90       | name MULTIPLY arithmExpr
   91       | arithmExpr MULTIPLY value
   92       | arithmExpr MULTIPLY name
   93       | arithmExpr MULTIPLY arithmExpr
   94       | value DIVIDE value
   95       | value DIVIDE name
   96       | name DIVIDE value
   97       | name DIVIDE name
   98       | value DIVIDE arithmExpr
   99       | name DIVIDE arithmExpr
  100       | arithmExpr DIVIDE value
  101       | arithmExpr DIVIDE name
  102       | arithmExpr DIVIDE arithmExpr
  103       | OPEN_PARENT arithmExpr CLOSE_PARENT
  104       | value
  105       | name

  106 value: NUMBER
  107      | EXPON

  108 type: INT
  109     | CONST INT

  110 name: ALPHA

  111 id: ALPHA

  112 ids: id COMMA ids
  113    | id


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    MAIN (258) 1
    RETURN (259) 10 11
    PRINTF (260) 20
    CONST (261) 109
    COMMA (262) 12 112
    SEMICOLON (263) 10 11 15 16 19 20
    OPEN_BRACE (264) 3
    CLOSE_BRACE (265) 3
    OPEN_PARENT (266) 1 20 22 27 83 103
    CLOSE_PARENT (267) 1 20 22 27 83 103
    IF (268) 22
    ELSE (269) 23 24
    WHILE (270) 27
    EXCLAM (271) 64
    EQUALITY (272) 36 42 48 54 62
    DIFF (273) 37 43 49 55 63
    LESS (274) 32 38 44 50 58
    MORE (275) 34 40 46 52 60
    LESS_EQ (276) 33 39 45 51 59
    MORE_EQ (277) 35 41 47 53 61
    NUMBER <nb> (278) 106
    EXPON <nb> (279) 107
    ALPHA <str> (280) 110 111
    INT <str> (281) 108 109
    EQUAL (282) 16 19
    PLUS (283) 65 66 67 68 69 70 71 72 73
    MINUS (284) 74 75 76 77 78 79 80 81 82
    MULTIPLY (285) 85 86 87 88 89 90 91 92 93
    DIVIDE (286) 94 95 96 97 98 99 100 101 102


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    main_structure (33)
        on left: 1
        on right: 0
    body (34)
        on left: 3
        on right: 1 22 24 27
    $@1 (35)
        on left: 2
        on right: 3
    insts (36)
        on left: 4 5
        on right: 3 4
    inst (37)
        on left: 6 7 8 9 10 11
        on right: 4
    params (38)
        on left: 12 13 14
        on right: 1 12
    declaration (39)
        on left: 15 16
        on right: 17 18
    declarations (40)
        on left: 17 18
        on right: 3 17
    affectation (41)
        on left: 19
        on right: 6
    print (42)
        on left: 20
        on right: 7
    if (43)
        on left: 22
        on right: 23 24
    $@2 (44)
        on left: 21
        on right: 22
    ifBlock (45)
        on left: 23 24
        on right: 8
    whileBlock (46)
        on left: 27
        on right: 9
    $@3 (47)
        on left: 25
        on right: 27
    $@4 (48)
        on left: 26
        on right: 27
    condition (49)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
        on right: 22 27 56 57
    binaryOperand (50)
        on left: 58 59 60 61 62 63
        on right: 56
    unaryOperand (51)
        on left: 64
        on right: 30 31 57
    arithmExpr <nb> (52)
        on left: 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 19 69 70 71 72 73 78 79 80 81 82 83 89 90 91 92 93 98 99 100 101 102 103
    divMul <nb> (53)
        on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
        on right: 84
    value <nb> (54)
        on left: 106 107
        on right: 10 16 20 28 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 65 66 67 69 71 74 75 76 78 80 85 86 87 89 91 94 95 96 98 100 104
    type <nb> (55)
        on left: 108 109
        on right: 1 12 13 15 16
    name <str> (56)
        on left: 110
        on right: 11 12 13 19 29 31 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 66 67 68 70 72 75 76 77 79 81 86 87 88 90 92 95 96 97 99 101 105
    id <str> (57)
        on left: 111
        on right: 16 112 113
    ids (58)
        on left: 112 113
        on right: 15 112


State 0

    0 $accept: . main_structure $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    main_structure  go to state 3
    type            go to state 4


State 1

  109 type: CONST . INT

    INT  shift, and go to state 5


State 2

  108 type: INT .

    $default  reduce using rule 108 (type)


State 3

    0 $accept: main_structure . $end

    $end  shift, and go to state 6


State 4

    1 main_structure: type . MAIN OPEN_PARENT params CLOSE_PARENT body

    MAIN  shift, and go to state 7


State 5

  109 type: CONST INT .

    $default  reduce using rule 109 (type)


State 6

    0 $accept: main_structure $end .

    $default  accept


State 7

    1 main_structure: type MAIN . OPEN_PARENT params CLOSE_PARENT body

    OPEN_PARENT  shift, and go to state 8


State 8

    1 main_structure: type MAIN OPEN_PARENT . params CLOSE_PARENT body

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    $default  reduce using rule 14 (params)

    params  go to state 9
    type    go to state 10


State 9

    1 main_structure: type MAIN OPEN_PARENT params . CLOSE_PARENT body

    CLOSE_PARENT  shift, and go to state 11


State 10

   12 params: type . name COMMA params
   13       | type . name

    ALPHA  shift, and go to state 12

    name  go to state 13


State 11

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 15


State 12

  110 name: ALPHA .

    $default  reduce using rule 110 (name)


State 13

   12 params: type name . COMMA params
   13       | type name .

    COMMA  shift, and go to state 16

    $default  reduce using rule 13 (params)


State 14

    3 body: OPEN_BRACE . $@1 declarations insts CLOSE_BRACE

    $default  reduce using rule 2 ($@1)

    $@1  go to state 17


State 15

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body .

    $default  reduce using rule 1 (main_structure)


State 16

   12 params: type name COMMA . params

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    $default  reduce using rule 14 (params)

    params  go to state 18
    type    go to state 10


State 17

    3 body: OPEN_BRACE $@1 . declarations insts CLOSE_BRACE

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    declaration   go to state 19
    declarations  go to state 20
    type          go to state 21


State 18

   12 params: type name COMMA params .

    $default  reduce using rule 12 (params)


State 19

   17 declarations: declaration . declarations
   18             | declaration .

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    $default  reduce using rule 18 (declarations)

    declaration   go to state 19
    declarations  go to state 22
    type          go to state 21


State 20

    3 body: OPEN_BRACE $@1 declarations . insts CLOSE_BRACE

    RETURN  shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ALPHA   shift, and go to state 12

    $default  reduce using rule 5 (insts)

    insts        go to state 27
    inst         go to state 28
    affectation  go to state 29
    print        go to state 30
    if           go to state 31
    ifBlock      go to state 32
    whileBlock   go to state 33
    name         go to state 34


State 21

   15 declaration: type . ids SEMICOLON
   16            | type . id EQUAL value SEMICOLON

    ALPHA  shift, and go to state 35

    id   go to state 36
    ids  go to state 37


State 22

   17 declarations: declaration declarations .

    $default  reduce using rule 17 (declarations)


State 23

   10 inst: RETURN . value SEMICOLON
   11     | RETURN . name SEMICOLON

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 40
    name   go to state 41


State 24

   20 print: PRINTF . OPEN_PARENT value CLOSE_PARENT SEMICOLON

    OPEN_PARENT  shift, and go to state 42


State 25

   22 if: IF . OPEN_PARENT condition CLOSE_PARENT $@2 body

    OPEN_PARENT  shift, and go to state 43


State 26

   27 whileBlock: WHILE . $@3 OPEN_PARENT condition CLOSE_PARENT $@4 body

    $default  reduce using rule 25 ($@3)

    $@3  go to state 44


State 27

    3 body: OPEN_BRACE $@1 declarations insts . CLOSE_BRACE

    CLOSE_BRACE  shift, and go to state 45


State 28

    4 insts: inst . insts

    RETURN  shift, and go to state 23
    PRINTF  shift, and go to state 24
    IF      shift, and go to state 25
    WHILE   shift, and go to state 26
    ALPHA   shift, and go to state 12

    $default  reduce using rule 5 (insts)

    insts        go to state 46
    inst         go to state 28
    affectation  go to state 29
    print        go to state 30
    if           go to state 31
    ifBlock      go to state 32
    whileBlock   go to state 33
    name         go to state 34


State 29

    6 inst: affectation .

    $default  reduce using rule 6 (inst)


State 30

    7 inst: print .

    $default  reduce using rule 7 (inst)


State 31

   23 ifBlock: if . ELSE if
   24        | if . ELSE body

    ELSE  shift, and go to state 47


State 32

    8 inst: ifBlock .

    $default  reduce using rule 8 (inst)


State 33

    9 inst: whileBlock .

    $default  reduce using rule 9 (inst)


State 34

   19 affectation: name . EQUAL arithmExpr SEMICOLON

    EQUAL  shift, and go to state 48


State 35

  111 id: ALPHA .

    $default  reduce using rule 111 (id)


State 36

   16 declaration: type id . EQUAL value SEMICOLON
  112 ids: id . COMMA ids
  113    | id .

    COMMA  shift, and go to state 49
    EQUAL  shift, and go to state 50

    $default  reduce using rule 113 (ids)


State 37

   15 declaration: type ids . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 38

  106 value: NUMBER .

    $default  reduce using rule 106 (value)


State 39

  107 value: EXPON .

    $default  reduce using rule 107 (value)


State 40

   10 inst: RETURN value . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 41

   11 inst: RETURN name . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 42

   20 print: PRINTF OPEN_PARENT . value CLOSE_PARENT SEMICOLON

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39

    value  go to state 54


State 43

   22 if: IF OPEN_PARENT . condition CLOSE_PARENT $@2 body

    EXCLAM  shift, and go to state 55
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 56
    unaryOperand  go to state 57
    value         go to state 58
    name          go to state 59


State 44

   27 whileBlock: WHILE $@3 . OPEN_PARENT condition CLOSE_PARENT $@4 body

    OPEN_PARENT  shift, and go to state 60


State 45

    3 body: OPEN_BRACE $@1 declarations insts CLOSE_BRACE .

    $default  reduce using rule 3 (body)


State 46

    4 insts: inst insts .

    $default  reduce using rule 4 (insts)


State 47

   23 ifBlock: if ELSE . if
   24        | if ELSE . body

    OPEN_BRACE  shift, and go to state 14
    IF          shift, and go to state 25

    body  go to state 61
    if    go to state 62


State 48

   19 affectation: name EQUAL . arithmExpr SEMICOLON

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 64
    divMul      go to state 65
    value       go to state 66
    name        go to state 67


State 49

  112 ids: id COMMA . ids

    ALPHA  shift, and go to state 35

    id   go to state 68
    ids  go to state 69


State 50

   16 declaration: type id EQUAL . value SEMICOLON

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39

    value  go to state 70


State 51

   15 declaration: type ids SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 52

   10 inst: RETURN value SEMICOLON .

    $default  reduce using rule 10 (inst)


State 53

   11 inst: RETURN name SEMICOLON .

    $default  reduce using rule 11 (inst)


State 54

   20 print: PRINTF OPEN_PARENT value . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  shift, and go to state 71


State 55

   64 unaryOperand: EXCLAM .

    $default  reduce using rule 64 (unaryOperand)


State 56

   22 if: IF OPEN_PARENT condition . CLOSE_PARENT $@2 body
   56 condition: condition . binaryOperand condition

    CLOSE_PARENT  shift, and go to state 72
    EQUALITY      shift, and go to state 73
    DIFF          shift, and go to state 74
    LESS          shift, and go to state 75
    MORE          shift, and go to state 76
    LESS_EQ       shift, and go to state 77
    MORE_EQ       shift, and go to state 78

    binaryOperand  go to state 79


State 57

   30 condition: unaryOperand . value
   31          | unaryOperand . name
   57          | unaryOperand . condition

    EXCLAM  shift, and go to state 55
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 80
    unaryOperand  go to state 57
    value         go to state 81
    name          go to state 82


State 58

   28 condition: value .
   32          | value . LESS value
   33          | value . LESS_EQ value
   34          | value . MORE value
   35          | value . MORE_EQ value
   36          | value . EQUALITY value
   37          | value . DIFF value
   38          | value . LESS name
   39          | value . LESS_EQ name
   40          | value . MORE name
   41          | value . MORE_EQ name
   42          | value . EQUALITY name
   43          | value . DIFF name

    EQUALITY  shift, and go to state 83
    DIFF      shift, and go to state 84
    LESS      shift, and go to state 85
    MORE      shift, and go to state 86
    LESS_EQ   shift, and go to state 87
    MORE_EQ   shift, and go to state 88

    EQUALITY  [reduce using rule 28 (condition)]
    DIFF      [reduce using rule 28 (condition)]
    LESS      [reduce using rule 28 (condition)]
    MORE      [reduce using rule 28 (condition)]
    LESS_EQ   [reduce using rule 28 (condition)]
    MORE_EQ   [reduce using rule 28 (condition)]
    $default  reduce using rule 28 (condition)


State 59

   29 condition: name .
   44          | name . LESS value
   45          | name . LESS_EQ value
   46          | name . MORE value
   47          | name . MORE_EQ value
   48          | name . EQUALITY value
   49          | name . DIFF value
   50          | name . LESS name
   51          | name . LESS_EQ name
   52          | name . MORE name
   53          | name . MORE_EQ name
   54          | name . EQUALITY name
   55          | name . DIFF name

    EQUALITY  shift, and go to state 89
    DIFF      shift, and go to state 90
    LESS      shift, and go to state 91
    MORE      shift, and go to state 92
    LESS_EQ   shift, and go to state 93
    MORE_EQ   shift, and go to state 94

    EQUALITY  [reduce using rule 29 (condition)]
    DIFF      [reduce using rule 29 (condition)]
    LESS      [reduce using rule 29 (condition)]
    MORE      [reduce using rule 29 (condition)]
    LESS_EQ   [reduce using rule 29 (condition)]
    MORE_EQ   [reduce using rule 29 (condition)]
    $default  reduce using rule 29 (condition)


State 60

   27 whileBlock: WHILE $@3 OPEN_PARENT . condition CLOSE_PARENT $@4 body

    EXCLAM  shift, and go to state 55
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 95
    unaryOperand  go to state 57
    value         go to state 58
    name          go to state 59


State 61

   24 ifBlock: if ELSE body .

    $default  reduce using rule 24 (ifBlock)


State 62

   23 ifBlock: if ELSE if .

    $default  reduce using rule 23 (ifBlock)


State 63

   83 arithmExpr: OPEN_PARENT . arithmExpr CLOSE_PARENT
  103 divMul: OPEN_PARENT . arithmExpr CLOSE_PARENT

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 96
    divMul      go to state 65
    value       go to state 66
    name        go to state 67


State 64

   19 affectation: name EQUAL arithmExpr . SEMICOLON
   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    SEMICOLON  shift, and go to state 97
    PLUS       shift, and go to state 98
    MINUS      shift, and go to state 99
    MULTIPLY   shift, and go to state 100
    DIVIDE     shift, and go to state 101


State 65

   84 arithmExpr: divMul .

    $default  reduce using rule 84 (arithmExpr)


State 66

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    PLUS      shift, and go to state 102
    MINUS     shift, and go to state 103
    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    PLUS      [reduce using rule 104 (divMul)]
    MINUS     [reduce using rule 104 (divMul)]
    MULTIPLY  [reduce using rule 104 (divMul)]
    DIVIDE    [reduce using rule 104 (divMul)]
    $default  reduce using rule 104 (divMul)


State 67

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    PLUS      shift, and go to state 106
    MINUS     shift, and go to state 107
    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    PLUS      [reduce using rule 105 (divMul)]
    MINUS     [reduce using rule 105 (divMul)]
    MULTIPLY  [reduce using rule 105 (divMul)]
    DIVIDE    [reduce using rule 105 (divMul)]
    $default  reduce using rule 105 (divMul)


State 68

  112 ids: id . COMMA ids
  113    | id .

    COMMA  shift, and go to state 49

    $default  reduce using rule 113 (ids)


State 69

  112 ids: id COMMA ids .

    $default  reduce using rule 112 (ids)


State 70

   16 declaration: type id EQUAL value . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 71

   20 print: PRINTF OPEN_PARENT value CLOSE_PARENT . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 72

   22 if: IF OPEN_PARENT condition CLOSE_PARENT . $@2 body

    $default  reduce using rule 21 ($@2)

    $@2  go to state 112


State 73

   62 binaryOperand: EQUALITY .

    $default  reduce using rule 62 (binaryOperand)


State 74

   63 binaryOperand: DIFF .

    $default  reduce using rule 63 (binaryOperand)


State 75

   58 binaryOperand: LESS .

    $default  reduce using rule 58 (binaryOperand)


State 76

   60 binaryOperand: MORE .

    $default  reduce using rule 60 (binaryOperand)


State 77

   59 binaryOperand: LESS_EQ .

    $default  reduce using rule 59 (binaryOperand)


State 78

   61 binaryOperand: MORE_EQ .

    $default  reduce using rule 61 (binaryOperand)


State 79

   56 condition: condition binaryOperand . condition

    EXCLAM  shift, and go to state 55
    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    condition     go to state 113
    unaryOperand  go to state 57
    value         go to state 58
    name          go to state 59


State 80

   56 condition: condition . binaryOperand condition
   57          | unaryOperand condition .

    EQUALITY  shift, and go to state 73
    DIFF      shift, and go to state 74
    LESS      shift, and go to state 75
    MORE      shift, and go to state 76
    LESS_EQ   shift, and go to state 77
    MORE_EQ   shift, and go to state 78

    EQUALITY  [reduce using rule 57 (condition)]
    DIFF      [reduce using rule 57 (condition)]
    LESS      [reduce using rule 57 (condition)]
    MORE      [reduce using rule 57 (condition)]
    LESS_EQ   [reduce using rule 57 (condition)]
    MORE_EQ   [reduce using rule 57 (condition)]
    $default  reduce using rule 57 (condition)

    binaryOperand  go to state 79


State 81

   28 condition: value .
   30          | unaryOperand value .
   32          | value . LESS value
   33          | value . LESS_EQ value
   34          | value . MORE value
   35          | value . MORE_EQ value
   36          | value . EQUALITY value
   37          | value . DIFF value
   38          | value . LESS name
   39          | value . LESS_EQ name
   40          | value . MORE name
   41          | value . MORE_EQ name
   42          | value . EQUALITY name
   43          | value . DIFF name

    EQUALITY  shift, and go to state 83
    DIFF      shift, and go to state 84
    LESS      shift, and go to state 85
    MORE      shift, and go to state 86
    LESS_EQ   shift, and go to state 87
    MORE_EQ   shift, and go to state 88

    CLOSE_PARENT  reduce using rule 28 (condition)
    CLOSE_PARENT  [reduce using rule 30 (condition)]
    EQUALITY      [reduce using rule 28 (condition)]
    EQUALITY      [reduce using rule 30 (condition)]
    DIFF          [reduce using rule 28 (condition)]
    DIFF          [reduce using rule 30 (condition)]
    LESS          [reduce using rule 28 (condition)]
    LESS          [reduce using rule 30 (condition)]
    MORE          [reduce using rule 28 (condition)]
    MORE          [reduce using rule 30 (condition)]
    LESS_EQ       [reduce using rule 28 (condition)]
    LESS_EQ       [reduce using rule 30 (condition)]
    MORE_EQ       [reduce using rule 28 (condition)]
    MORE_EQ       [reduce using rule 30 (condition)]
    $default      reduce using rule 28 (condition)


State 82

   29 condition: name .
   31          | unaryOperand name .
   44          | name . LESS value
   45          | name . LESS_EQ value
   46          | name . MORE value
   47          | name . MORE_EQ value
   48          | name . EQUALITY value
   49          | name . DIFF value
   50          | name . LESS name
   51          | name . LESS_EQ name
   52          | name . MORE name
   53          | name . MORE_EQ name
   54          | name . EQUALITY name
   55          | name . DIFF name

    EQUALITY  shift, and go to state 89
    DIFF      shift, and go to state 90
    LESS      shift, and go to state 91
    MORE      shift, and go to state 92
    LESS_EQ   shift, and go to state 93
    MORE_EQ   shift, and go to state 94

    CLOSE_PARENT  reduce using rule 29 (condition)
    CLOSE_PARENT  [reduce using rule 31 (condition)]
    EQUALITY      [reduce using rule 29 (condition)]
    EQUALITY      [reduce using rule 31 (condition)]
    DIFF          [reduce using rule 29 (condition)]
    DIFF          [reduce using rule 31 (condition)]
    LESS          [reduce using rule 29 (condition)]
    LESS          [reduce using rule 31 (condition)]
    MORE          [reduce using rule 29 (condition)]
    MORE          [reduce using rule 31 (condition)]
    LESS_EQ       [reduce using rule 29 (condition)]
    LESS_EQ       [reduce using rule 31 (condition)]
    MORE_EQ       [reduce using rule 29 (condition)]
    MORE_EQ       [reduce using rule 31 (condition)]
    $default      reduce using rule 29 (condition)


State 83

   36 condition: value EQUALITY . value
   42          | value EQUALITY . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 114
    name   go to state 115


State 84

   37 condition: value DIFF . value
   43          | value DIFF . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 116
    name   go to state 117


State 85

   32 condition: value LESS . value
   38          | value LESS . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 118
    name   go to state 119


State 86

   34 condition: value MORE . value
   40          | value MORE . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 120
    name   go to state 121


State 87

   33 condition: value LESS_EQ . value
   39          | value LESS_EQ . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 122
    name   go to state 123


State 88

   35 condition: value MORE_EQ . value
   41          | value MORE_EQ . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 124
    name   go to state 125


State 89

   48 condition: name EQUALITY . value
   54          | name EQUALITY . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 126
    name   go to state 127


State 90

   49 condition: name DIFF . value
   55          | name DIFF . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 128
    name   go to state 129


State 91

   44 condition: name LESS . value
   50          | name LESS . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 130
    name   go to state 131


State 92

   46 condition: name MORE . value
   52          | name MORE . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 132
    name   go to state 133


State 93

   45 condition: name LESS_EQ . value
   51          | name LESS_EQ . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 134
    name   go to state 135


State 94

   47 condition: name MORE_EQ . value
   53          | name MORE_EQ . name

    NUMBER  shift, and go to state 38
    EXPON   shift, and go to state 39
    ALPHA   shift, and go to state 12

    value  go to state 136
    name   go to state 137


State 95

   27 whileBlock: WHILE $@3 OPEN_PARENT condition . CLOSE_PARENT $@4 body
   56 condition: condition . binaryOperand condition

    CLOSE_PARENT  shift, and go to state 138
    EQUALITY      shift, and go to state 73
    DIFF          shift, and go to state 74
    LESS          shift, and go to state 75
    MORE          shift, and go to state 76
    LESS_EQ       shift, and go to state 77
    MORE_EQ       shift, and go to state 78

    binaryOperand  go to state 79


State 96

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   83           | OPEN_PARENT arithmExpr . CLOSE_PARENT
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr
  103       | OPEN_PARENT arithmExpr . CLOSE_PARENT

    CLOSE_PARENT  shift, and go to state 139
    PLUS          shift, and go to state 98
    MINUS         shift, and go to state 99
    MULTIPLY      shift, and go to state 100
    DIVIDE        shift, and go to state 101


State 97

   19 affectation: name EQUAL arithmExpr SEMICOLON .

    $default  reduce using rule 19 (affectation)


State 98

   71 arithmExpr: arithmExpr PLUS . value
   72           | arithmExpr PLUS . name
   73           | arithmExpr PLUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 140
    divMul      go to state 65
    value       go to state 141
    name        go to state 142


State 99

   80 arithmExpr: arithmExpr MINUS . value
   81           | arithmExpr MINUS . name
   82           | arithmExpr MINUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 143
    divMul      go to state 65
    value       go to state 144
    name        go to state 145


State 100

   91 divMul: arithmExpr MULTIPLY . value
   92       | arithmExpr MULTIPLY . name
   93       | arithmExpr MULTIPLY . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 146
    divMul      go to state 65
    value       go to state 147
    name        go to state 148


State 101

  100 divMul: arithmExpr DIVIDE . value
  101       | arithmExpr DIVIDE . name
  102       | arithmExpr DIVIDE . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 149
    divMul      go to state 65
    value       go to state 150
    name        go to state 151


State 102

   65 arithmExpr: value PLUS . value
   66           | value PLUS . name
   69           | value PLUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 152
    divMul      go to state 65
    value       go to state 153
    name        go to state 154


State 103

   74 arithmExpr: value MINUS . value
   75           | value MINUS . name
   78           | value MINUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 155
    divMul      go to state 65
    value       go to state 156
    name        go to state 157


State 104

   85 divMul: value MULTIPLY . value
   86       | value MULTIPLY . name
   89       | value MULTIPLY . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 158
    divMul      go to state 65
    value       go to state 159
    name        go to state 160


State 105

   94 divMul: value DIVIDE . value
   95       | value DIVIDE . name
   98       | value DIVIDE . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 161
    divMul      go to state 65
    value       go to state 162
    name        go to state 163


State 106

   67 arithmExpr: name PLUS . value
   68           | name PLUS . name
   70           | name PLUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 164
    divMul      go to state 65
    value       go to state 165
    name        go to state 166


State 107

   76 arithmExpr: name MINUS . value
   77           | name MINUS . name
   79           | name MINUS . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 167
    divMul      go to state 65
    value       go to state 168
    name        go to state 169


State 108

   87 divMul: name MULTIPLY . value
   88       | name MULTIPLY . name
   90       | name MULTIPLY . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 170
    divMul      go to state 65
    value       go to state 171
    name        go to state 172


State 109

   96 divMul: name DIVIDE . value
   97       | name DIVIDE . name
   99       | name DIVIDE . arithmExpr

    OPEN_PARENT  shift, and go to state 63
    NUMBER       shift, and go to state 38
    EXPON        shift, and go to state 39
    ALPHA        shift, and go to state 12

    arithmExpr  go to state 173
    divMul      go to state 65
    value       go to state 174
    name        go to state 175


State 110

   16 declaration: type id EQUAL value SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 111

   20 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON .

    $default  reduce using rule 20 (print)


State 112

   22 if: IF OPEN_PARENT condition CLOSE_PARENT $@2 . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 176


State 113

   56 condition: condition . binaryOperand condition
   56          | condition binaryOperand condition .

    EQUALITY  shift, and go to state 73
    DIFF      shift, and go to state 74
    LESS      shift, and go to state 75
    MORE      shift, and go to state 76
    LESS_EQ   shift, and go to state 77
    MORE_EQ   shift, and go to state 78

    EQUALITY  [reduce using rule 56 (condition)]
    DIFF      [reduce using rule 56 (condition)]
    LESS      [reduce using rule 56 (condition)]
    MORE      [reduce using rule 56 (condition)]
    LESS_EQ   [reduce using rule 56 (condition)]
    MORE_EQ   [reduce using rule 56 (condition)]
    $default  reduce using rule 56 (condition)

    binaryOperand  go to state 79


State 114

   36 condition: value EQUALITY value .

    $default  reduce using rule 36 (condition)


State 115

   42 condition: value EQUALITY name .

    $default  reduce using rule 42 (condition)


State 116

   37 condition: value DIFF value .

    $default  reduce using rule 37 (condition)


State 117

   43 condition: value DIFF name .

    $default  reduce using rule 43 (condition)


State 118

   32 condition: value LESS value .

    $default  reduce using rule 32 (condition)


State 119

   38 condition: value LESS name .

    $default  reduce using rule 38 (condition)


State 120

   34 condition: value MORE value .

    $default  reduce using rule 34 (condition)


State 121

   40 condition: value MORE name .

    $default  reduce using rule 40 (condition)


State 122

   33 condition: value LESS_EQ value .

    $default  reduce using rule 33 (condition)


State 123

   39 condition: value LESS_EQ name .

    $default  reduce using rule 39 (condition)


State 124

   35 condition: value MORE_EQ value .

    $default  reduce using rule 35 (condition)


State 125

   41 condition: value MORE_EQ name .

    $default  reduce using rule 41 (condition)


State 126

   48 condition: name EQUALITY value .

    $default  reduce using rule 48 (condition)


State 127

   54 condition: name EQUALITY name .

    $default  reduce using rule 54 (condition)


State 128

   49 condition: name DIFF value .

    $default  reduce using rule 49 (condition)


State 129

   55 condition: name DIFF name .

    $default  reduce using rule 55 (condition)


State 130

   44 condition: name LESS value .

    $default  reduce using rule 44 (condition)


State 131

   50 condition: name LESS name .

    $default  reduce using rule 50 (condition)


State 132

   46 condition: name MORE value .

    $default  reduce using rule 46 (condition)


State 133

   52 condition: name MORE name .

    $default  reduce using rule 52 (condition)


State 134

   45 condition: name LESS_EQ value .

    $default  reduce using rule 45 (condition)


State 135

   51 condition: name LESS_EQ name .

    $default  reduce using rule 51 (condition)


State 136

   47 condition: name MORE_EQ value .

    $default  reduce using rule 47 (condition)


State 137

   53 condition: name MORE_EQ name .

    $default  reduce using rule 53 (condition)


State 138

   27 whileBlock: WHILE $@3 OPEN_PARENT condition CLOSE_PARENT . $@4 body

    $default  reduce using rule 26 ($@4)

    $@4  go to state 177


State 139

   83 arithmExpr: OPEN_PARENT arithmExpr CLOSE_PARENT .
  103 divMul: OPEN_PARENT arithmExpr CLOSE_PARENT .

    SEMICOLON     reduce using rule 83 (arithmExpr)
    SEMICOLON     [reduce using rule 103 (divMul)]
    CLOSE_PARENT  reduce using rule 83 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 103 (divMul)]
    PLUS          reduce using rule 83 (arithmExpr)
    PLUS          [reduce using rule 103 (divMul)]
    MINUS         reduce using rule 83 (arithmExpr)
    MINUS         [reduce using rule 103 (divMul)]
    MULTIPLY      reduce using rule 83 (arithmExpr)
    MULTIPLY      [reduce using rule 103 (divMul)]
    DIVIDE        reduce using rule 83 (arithmExpr)
    DIVIDE        [reduce using rule 103 (divMul)]
    $default      reduce using rule 83 (arithmExpr)


State 140

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   73           | arithmExpr PLUS arithmExpr .
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 73 (arithmExpr)


State 141

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   71           | arithmExpr PLUS value .
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    SEMICOLON     reduce using rule 71 (arithmExpr)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 71 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 71 (arithmExpr)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 71 (arithmExpr)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 71 (arithmExpr)


State 142

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   72           | arithmExpr PLUS name .
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    SEMICOLON     reduce using rule 72 (arithmExpr)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 72 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 72 (arithmExpr)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 72 (arithmExpr)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 72 (arithmExpr)


State 143

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   82           | arithmExpr MINUS arithmExpr .
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 82 (arithmExpr)


State 144

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   80           | arithmExpr MINUS value .
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    SEMICOLON     reduce using rule 80 (arithmExpr)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 80 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 80 (arithmExpr)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 80 (arithmExpr)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 80 (arithmExpr)


State 145

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   81           | arithmExpr MINUS name .
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    SEMICOLON     reduce using rule 81 (arithmExpr)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 81 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 81 (arithmExpr)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 81 (arithmExpr)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 81 (arithmExpr)


State 146

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
   93       | arithmExpr MULTIPLY arithmExpr .
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 93 (divMul)


State 147

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   91       | arithmExpr MULTIPLY value .
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    SEMICOLON     reduce using rule 91 (divMul)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 91 (divMul)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 91 (divMul)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 91 (divMul)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      reduce using rule 91 (divMul)
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        reduce using rule 91 (divMul)
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 91 (divMul)


State 148

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   92       | arithmExpr MULTIPLY name .
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    SEMICOLON     reduce using rule 92 (divMul)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 92 (divMul)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 92 (divMul)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 92 (divMul)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      reduce using rule 92 (divMul)
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        reduce using rule 92 (divMul)
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 92 (divMul)


State 149

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr
  102       | arithmExpr DIVIDE arithmExpr .

    $default  reduce using rule 102 (divMul)


State 150

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  100       | arithmExpr DIVIDE value .
  104       | value .

    SEMICOLON     reduce using rule 100 (divMul)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 100 (divMul)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 100 (divMul)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 100 (divMul)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      reduce using rule 100 (divMul)
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        reduce using rule 100 (divMul)
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 100 (divMul)


State 151

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  101       | arithmExpr DIVIDE name .
  105       | name .

    SEMICOLON     reduce using rule 101 (divMul)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 101 (divMul)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 101 (divMul)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 101 (divMul)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      reduce using rule 101 (divMul)
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        reduce using rule 101 (divMul)
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 101 (divMul)


State 152

   69 arithmExpr: value PLUS arithmExpr .
   71           | arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 69 (arithmExpr)


State 153

   65 arithmExpr: value . PLUS value
   65           | value PLUS value .
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    SEMICOLON     reduce using rule 65 (arithmExpr)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 65 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 65 (arithmExpr)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 65 (arithmExpr)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 65 (arithmExpr)


State 154

   66 arithmExpr: value PLUS name .
   67           | name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    SEMICOLON     reduce using rule 66 (arithmExpr)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 66 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 66 (arithmExpr)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 66 (arithmExpr)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 66 (arithmExpr)


State 155

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   78           | value MINUS arithmExpr .
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 78 (arithmExpr)


State 156

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   74           | value MINUS value .
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    SEMICOLON     reduce using rule 74 (arithmExpr)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 74 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 74 (arithmExpr)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 74 (arithmExpr)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 74 (arithmExpr)


State 157

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   75           | value MINUS name .
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    SEMICOLON     reduce using rule 75 (arithmExpr)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 75 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 75 (arithmExpr)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 75 (arithmExpr)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 75 (arithmExpr)


State 158

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   89 divMul: value MULTIPLY arithmExpr .
   91       | arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 89 (divMul)


State 159

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   85       | value MULTIPLY value .
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    SEMICOLON     reduce using rule 85 (divMul)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 85 (divMul)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 85 (divMul)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 85 (divMul)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      reduce using rule 85 (divMul)
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        reduce using rule 85 (divMul)
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 85 (divMul)


State 160

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   86 divMul: value MULTIPLY name .
   87       | name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    SEMICOLON     reduce using rule 86 (divMul)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 86 (divMul)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 86 (divMul)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 86 (divMul)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      reduce using rule 86 (divMul)
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        reduce using rule 86 (divMul)
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 86 (divMul)


State 161

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
   98       | value DIVIDE arithmExpr .
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 98 (divMul)


State 162

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   94       | value DIVIDE value .
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    SEMICOLON     reduce using rule 94 (divMul)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 94 (divMul)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 94 (divMul)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 94 (divMul)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      reduce using rule 94 (divMul)
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        reduce using rule 94 (divMul)
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 94 (divMul)


State 163

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   95       | value DIVIDE name .
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    SEMICOLON     reduce using rule 95 (divMul)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 95 (divMul)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 95 (divMul)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 95 (divMul)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      reduce using rule 95 (divMul)
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        reduce using rule 95 (divMul)
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 95 (divMul)


State 164

   70 arithmExpr: name PLUS arithmExpr .
   71           | arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 70 (arithmExpr)


State 165

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   67           | name PLUS value .
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    SEMICOLON     reduce using rule 67 (arithmExpr)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 67 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 67 (arithmExpr)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 67 (arithmExpr)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 67 (arithmExpr)


State 166

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   68           | name PLUS name .
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    SEMICOLON     reduce using rule 68 (arithmExpr)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 68 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 68 (arithmExpr)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 68 (arithmExpr)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 68 (arithmExpr)


State 167

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   79           | name MINUS arithmExpr .
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    MULTIPLY  shift, and go to state 100
    DIVIDE    shift, and go to state 101

    $default  reduce using rule 79 (arithmExpr)


State 168

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   76           | name MINUS value .
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    MULTIPLY  shift, and go to state 104
    DIVIDE    shift, and go to state 105

    SEMICOLON     reduce using rule 76 (arithmExpr)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 76 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 76 (arithmExpr)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 76 (arithmExpr)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 76 (arithmExpr)


State 169

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   77           | name MINUS name .
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    MULTIPLY  shift, and go to state 108
    DIVIDE    shift, and go to state 109

    SEMICOLON     reduce using rule 77 (arithmExpr)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 77 (arithmExpr)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 77 (arithmExpr)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 77 (arithmExpr)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 77 (arithmExpr)


State 170

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   90 divMul: name MULTIPLY arithmExpr .
   91       | arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 90 (divMul)


State 171

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   87       | name MULTIPLY value .
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   98       | value . DIVIDE arithmExpr
  104       | value .

    SEMICOLON     reduce using rule 87 (divMul)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 87 (divMul)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 87 (divMul)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 87 (divMul)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      reduce using rule 87 (divMul)
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        reduce using rule 87 (divMul)
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 87 (divMul)


State 172

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   88       | name MULTIPLY name .
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   99       | name . DIVIDE arithmExpr
  105       | name .

    SEMICOLON     reduce using rule 88 (divMul)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 88 (divMul)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 88 (divMul)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 88 (divMul)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      reduce using rule 88 (divMul)
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        reduce using rule 88 (divMul)
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 88 (divMul)


State 173

   71 arithmExpr: arithmExpr . PLUS value
   72           | arithmExpr . PLUS name
   73           | arithmExpr . PLUS arithmExpr
   80           | arithmExpr . MINUS value
   81           | arithmExpr . MINUS name
   82           | arithmExpr . MINUS arithmExpr
   91 divMul: arithmExpr . MULTIPLY value
   92       | arithmExpr . MULTIPLY name
   93       | arithmExpr . MULTIPLY arithmExpr
   99       | name DIVIDE arithmExpr .
  100       | arithmExpr . DIVIDE value
  101       | arithmExpr . DIVIDE name
  102       | arithmExpr . DIVIDE arithmExpr

    $default  reduce using rule 99 (divMul)


State 174

   65 arithmExpr: value . PLUS value
   66           | value . PLUS name
   69           | value . PLUS arithmExpr
   74           | value . MINUS value
   75           | value . MINUS name
   78           | value . MINUS arithmExpr
   85 divMul: value . MULTIPLY value
   86       | value . MULTIPLY name
   89       | value . MULTIPLY arithmExpr
   94       | value . DIVIDE value
   95       | value . DIVIDE name
   96       | name DIVIDE value .
   98       | value . DIVIDE arithmExpr
  104       | value .

    SEMICOLON     reduce using rule 96 (divMul)
    SEMICOLON     [reduce using rule 104 (divMul)]
    CLOSE_PARENT  reduce using rule 96 (divMul)
    CLOSE_PARENT  [reduce using rule 104 (divMul)]
    PLUS          reduce using rule 96 (divMul)
    PLUS          [reduce using rule 104 (divMul)]
    MINUS         reduce using rule 96 (divMul)
    MINUS         [reduce using rule 104 (divMul)]
    MULTIPLY      reduce using rule 96 (divMul)
    MULTIPLY      [reduce using rule 104 (divMul)]
    DIVIDE        reduce using rule 96 (divMul)
    DIVIDE        [reduce using rule 104 (divMul)]
    $default      reduce using rule 96 (divMul)


State 175

   67 arithmExpr: name . PLUS value
   68           | name . PLUS name
   70           | name . PLUS arithmExpr
   76           | name . MINUS value
   77           | name . MINUS name
   79           | name . MINUS arithmExpr
   87 divMul: name . MULTIPLY value
   88       | name . MULTIPLY name
   90       | name . MULTIPLY arithmExpr
   96       | name . DIVIDE value
   97       | name . DIVIDE name
   97       | name DIVIDE name .
   99       | name . DIVIDE arithmExpr
  105       | name .

    SEMICOLON     reduce using rule 97 (divMul)
    SEMICOLON     [reduce using rule 105 (divMul)]
    CLOSE_PARENT  reduce using rule 97 (divMul)
    CLOSE_PARENT  [reduce using rule 105 (divMul)]
    PLUS          reduce using rule 97 (divMul)
    PLUS          [reduce using rule 105 (divMul)]
    MINUS         reduce using rule 97 (divMul)
    MINUS         [reduce using rule 105 (divMul)]
    MULTIPLY      reduce using rule 97 (divMul)
    MULTIPLY      [reduce using rule 105 (divMul)]
    DIVIDE        reduce using rule 97 (divMul)
    DIVIDE        [reduce using rule 105 (divMul)]
    $default      reduce using rule 97 (divMul)


State 176

   22 if: IF OPEN_PARENT condition CLOSE_PARENT $@2 body .

    $default  reduce using rule 22 (if)


State 177

   27 whileBlock: WHILE $@3 OPEN_PARENT condition CLOSE_PARENT $@4 . body

    OPEN_BRACE  shift, and go to state 14

    body  go to state 178


State 178

   27 whileBlock: WHILE $@3 OPEN_PARENT condition CLOSE_PARENT $@4 body .

    $default  reduce using rule 27 (whileBlock)

Non-terminaux inutiles dans la grammaire

    args


Terminaux inutilisés dans la grammaire

    EOL
    DOT
    OPEN_BRACKET
    CLOSE_BRACKET


Règles inutiles dans la grammaire

   34 args: value COMMA args
   35     | value
   36     | %empty


État 12 conflits: 1 décalage/réduction
État 22 conflits: 1 décalage/réduction
État 49 conflits: 1 décalage/réduction
État 65 conflits: 4 décalage/réduction


Grammaire

    0 $accept: main_structure $end

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body

    2 params: type name COMMA params
    3       | type name

    4 body: OPEN_BRACE insts CLOSE_BRACE

    5 insts: inst insts
    6      | %empty

    7 inst: declaration
    8     | affectation
    9     | print
   10     | RETURN value SEMICOLON
   11     | RETURN name SEMICOLON

   12 declaration: type names SEMICOLON
   13            | CONST type names SEMICOLON

   14 affectation: type name EQUAL value SEMICOLON
   15            | name EQUAL value SEMICOLON
   16            | name EQUAL operation SEMICOLON

   17 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON
   18      | PRINTF OPEN_PARENT name CLOSE_PARENT SEMICOLON

   19 signs: PLUS
   20      | MINUS
   21      | MULTIPLY
   22      | DIVIDE

   23 operation: operation signs operation
   24          | value

   25 value: NUMBER

   26 type: INT
   27     | %empty

   28 name: ALPHA end_name

   29 end_name: ALPHA
   30         | NUMBER
   31         | %empty

   32 names: name COMMA names
   33      | name


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    PLUS (258) 19
    MINUS (259) 20
    MULTIPLY (260) 21
    DIVIDE (261) 22
    EQUAL (262) 14 15 16
    NUMBER (263) 25 30
    ALPHA (264) 28 29
    INT (265) 26
    CONST (266) 13
    EOL (267)
    DOT (268)
    COMMA (269) 2 32
    SEMICOLON (270) 10 11 12 13 14 15 16 17 18
    OPEN_BRACE (271) 4
    CLOSE_BRACE (272) 4
    OPEN_BRACKET (273)
    CLOSE_BRACKET (274)
    OPEN_PARENT (275) 1 17 18
    CLOSE_PARENT (276) 1 17 18
    MAIN (277) 1
    RETURN (278) 10 11
    PRINTF (279) 17 18


Non-terminaux, suivis des règles où ils apparaissent

    $accept (25)
        à gauche: 0
    main_structure (26)
        à gauche: 1
        à droite: 0
    params (27)
        à gauche: 2 3
        à droite: 1 2
    body (28)
        à gauche: 4
        à droite: 1
    insts (29)
        à gauche: 5 6
        à droite: 4 5
    inst (30)
        à gauche: 7 8 9 10 11
        à droite: 5
    declaration (31)
        à gauche: 12 13
        à droite: 7
    affectation (32)
        à gauche: 14 15 16
        à droite: 8
    print (33)
        à gauche: 17 18
        à droite: 9
    signs (34)
        à gauche: 19 20 21 22
        à droite: 23
    operation (35)
        à gauche: 23 24
        à droite: 16 23
    value (36)
        à gauche: 25
        à droite: 10 14 15 17 24
    type (37)
        à gauche: 26 27
        à droite: 1 2 3 12 13 14
    name (38)
        à gauche: 28
        à droite: 2 3 11 14 15 16 18 32 33
    end_name (39)
        à gauche: 29 30 31
        à droite: 28
    names (40)
        à gauche: 32 33
        à droite: 12 13 32


État 0

    0 $accept: . main_structure $end

    INT  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 27 (type)

    main_structure  aller à l'état 2
    type            aller à l'état 3


État 1

   26 type: INT .

    $défaut  réduction par utilisation de la règle 26 (type)


État 2

    0 $accept: main_structure . $end

    $end  décalage et aller à l'état 4


État 3

    1 main_structure: type . MAIN OPEN_PARENT params CLOSE_PARENT body

    MAIN  décalage et aller à l'état 5


État 4

    0 $accept: main_structure $end .

    $défaut  accepter


État 5

    1 main_structure: type MAIN . OPEN_PARENT params CLOSE_PARENT body

    OPEN_PARENT  décalage et aller à l'état 6


État 6

    1 main_structure: type MAIN OPEN_PARENT . params CLOSE_PARENT body

    INT  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 27 (type)

    params  aller à l'état 7
    type    aller à l'état 8


État 7

    1 main_structure: type MAIN OPEN_PARENT params . CLOSE_PARENT body

    CLOSE_PARENT  décalage et aller à l'état 9


État 8

    2 params: type . name COMMA params
    3       | type . name

    ALPHA  décalage et aller à l'état 10

    name  aller à l'état 11


État 9

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT . body

    OPEN_BRACE  décalage et aller à l'état 12

    body  aller à l'état 13


État 10

   28 name: ALPHA . end_name

    NUMBER  décalage et aller à l'état 14
    ALPHA   décalage et aller à l'état 15

    $défaut  réduction par utilisation de la règle 31 (end_name)

    end_name  aller à l'état 16


État 11

    2 params: type name . COMMA params
    3       | type name .

    COMMA  décalage et aller à l'état 17

    $défaut  réduction par utilisation de la règle 3 (params)


État 12

    4 body: OPEN_BRACE . insts CLOSE_BRACE

    ALPHA   décalage et aller à l'état 10
    INT     décalage et aller à l'état 1
    CONST   décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    PRINTF  décalage et aller à l'état 20

    ALPHA     [réduction par utilisation de la règle 27 (type)]
    $défaut  réduction par utilisation de la règle 6 (insts)

    insts        aller à l'état 21
    inst         aller à l'état 22
    declaration  aller à l'état 23
    affectation  aller à l'état 24
    print        aller à l'état 25
    type         aller à l'état 26
    name         aller à l'état 27


État 13

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body .

    $défaut  réduction par utilisation de la règle 1 (main_structure)


État 14

   30 end_name: NUMBER .

    $défaut  réduction par utilisation de la règle 30 (end_name)


État 15

   29 end_name: ALPHA .

    $défaut  réduction par utilisation de la règle 29 (end_name)


État 16

   28 name: ALPHA end_name .

    $défaut  réduction par utilisation de la règle 28 (name)


État 17

    2 params: type name COMMA . params

    INT  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 27 (type)

    params  aller à l'état 28
    type    aller à l'état 8


État 18

   13 declaration: CONST . type names SEMICOLON

    INT  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 27 (type)

    type  aller à l'état 29


État 19

   10 inst: RETURN . value SEMICOLON
   11     | RETURN . name SEMICOLON

    NUMBER  décalage et aller à l'état 30
    ALPHA   décalage et aller à l'état 10

    value  aller à l'état 31
    name   aller à l'état 32


État 20

   17 print: PRINTF . OPEN_PARENT value CLOSE_PARENT SEMICOLON
   18      | PRINTF . OPEN_PARENT name CLOSE_PARENT SEMICOLON

    OPEN_PARENT  décalage et aller à l'état 33


État 21

    4 body: OPEN_BRACE insts . CLOSE_BRACE

    CLOSE_BRACE  décalage et aller à l'état 34


État 22

    5 insts: inst . insts

    ALPHA   décalage et aller à l'état 10
    INT     décalage et aller à l'état 1
    CONST   décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    PRINTF  décalage et aller à l'état 20

    ALPHA     [réduction par utilisation de la règle 27 (type)]
    $défaut  réduction par utilisation de la règle 6 (insts)

    insts        aller à l'état 35
    inst         aller à l'état 22
    declaration  aller à l'état 23
    affectation  aller à l'état 24
    print        aller à l'état 25
    type         aller à l'état 26
    name         aller à l'état 27


État 23

    7 inst: declaration .

    $défaut  réduction par utilisation de la règle 7 (inst)


État 24

    8 inst: affectation .

    $défaut  réduction par utilisation de la règle 8 (inst)


État 25

    9 inst: print .

    $défaut  réduction par utilisation de la règle 9 (inst)


État 26

   12 declaration: type . names SEMICOLON
   14 affectation: type . name EQUAL value SEMICOLON

    ALPHA  décalage et aller à l'état 10

    name   aller à l'état 36
    names  aller à l'état 37


État 27

   15 affectation: name . EQUAL value SEMICOLON
   16            | name . EQUAL operation SEMICOLON

    EQUAL  décalage et aller à l'état 38


État 28

    2 params: type name COMMA params .

    $défaut  réduction par utilisation de la règle 2 (params)


État 29

   13 declaration: CONST type . names SEMICOLON

    ALPHA  décalage et aller à l'état 10

    name   aller à l'état 39
    names  aller à l'état 40


État 30

   25 value: NUMBER .

    $défaut  réduction par utilisation de la règle 25 (value)


État 31

   10 inst: RETURN value . SEMICOLON

    SEMICOLON  décalage et aller à l'état 41


État 32

   11 inst: RETURN name . SEMICOLON

    SEMICOLON  décalage et aller à l'état 42


État 33

   17 print: PRINTF OPEN_PARENT . value CLOSE_PARENT SEMICOLON
   18      | PRINTF OPEN_PARENT . name CLOSE_PARENT SEMICOLON

    NUMBER  décalage et aller à l'état 30
    ALPHA   décalage et aller à l'état 10

    value  aller à l'état 43
    name   aller à l'état 44


État 34

    4 body: OPEN_BRACE insts CLOSE_BRACE .

    $défaut  réduction par utilisation de la règle 4 (body)


État 35

    5 insts: inst insts .

    $défaut  réduction par utilisation de la règle 5 (insts)


État 36

   14 affectation: type name . EQUAL value SEMICOLON
   32 names: name . COMMA names
   33      | name .

    EQUAL  décalage et aller à l'état 45
    COMMA  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 33 (names)


État 37

   12 declaration: type names . SEMICOLON

    SEMICOLON  décalage et aller à l'état 47


État 38

   15 affectation: name EQUAL . value SEMICOLON
   16            | name EQUAL . operation SEMICOLON

    NUMBER  décalage et aller à l'état 30

    operation  aller à l'état 48
    value      aller à l'état 49


État 39

   32 names: name . COMMA names
   33      | name .

    COMMA  décalage et aller à l'état 46

    $défaut  réduction par utilisation de la règle 33 (names)


État 40

   13 declaration: CONST type names . SEMICOLON

    SEMICOLON  décalage et aller à l'état 50


État 41

   10 inst: RETURN value SEMICOLON .

    $défaut  réduction par utilisation de la règle 10 (inst)


État 42

   11 inst: RETURN name SEMICOLON .

    $défaut  réduction par utilisation de la règle 11 (inst)


État 43

   17 print: PRINTF OPEN_PARENT value . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  décalage et aller à l'état 51


État 44

   18 print: PRINTF OPEN_PARENT name . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  décalage et aller à l'état 52


État 45

   14 affectation: type name EQUAL . value SEMICOLON

    NUMBER  décalage et aller à l'état 30

    value  aller à l'état 53


État 46

   32 names: name COMMA . names

    ALPHA  décalage et aller à l'état 10

    name   aller à l'état 39
    names  aller à l'état 54


État 47

   12 declaration: type names SEMICOLON .

    $défaut  réduction par utilisation de la règle 12 (declaration)


État 48

   16 affectation: name EQUAL operation . SEMICOLON
   23 operation: operation . signs operation

    PLUS       décalage et aller à l'état 55
    MINUS      décalage et aller à l'état 56
    MULTIPLY   décalage et aller à l'état 57
    DIVIDE     décalage et aller à l'état 58
    SEMICOLON  décalage et aller à l'état 59

    signs  aller à l'état 60


État 49

   15 affectation: name EQUAL value . SEMICOLON
   24 operation: value .

    SEMICOLON  décalage et aller à l'état 61

    SEMICOLON  [réduction par utilisation de la règle 24 (operation)]
    $défaut   réduction par utilisation de la règle 24 (operation)


État 50

   13 declaration: CONST type names SEMICOLON .

    $défaut  réduction par utilisation de la règle 13 (declaration)


État 51

   17 print: PRINTF OPEN_PARENT value CLOSE_PARENT . SEMICOLON

    SEMICOLON  décalage et aller à l'état 62


État 52

   18 print: PRINTF OPEN_PARENT name CLOSE_PARENT . SEMICOLON

    SEMICOLON  décalage et aller à l'état 63


État 53

   14 affectation: type name EQUAL value . SEMICOLON

    SEMICOLON  décalage et aller à l'état 64


État 54

   32 names: name COMMA names .

    $défaut  réduction par utilisation de la règle 32 (names)


État 55

   19 signs: PLUS .

    $défaut  réduction par utilisation de la règle 19 (signs)


État 56

   20 signs: MINUS .

    $défaut  réduction par utilisation de la règle 20 (signs)


État 57

   21 signs: MULTIPLY .

    $défaut  réduction par utilisation de la règle 21 (signs)


État 58

   22 signs: DIVIDE .

    $défaut  réduction par utilisation de la règle 22 (signs)


État 59

   16 affectation: name EQUAL operation SEMICOLON .

    $défaut  réduction par utilisation de la règle 16 (affectation)


État 60

   23 operation: operation signs . operation

    NUMBER  décalage et aller à l'état 30

    operation  aller à l'état 65
    value      aller à l'état 66


État 61

   15 affectation: name EQUAL value SEMICOLON .

    $défaut  réduction par utilisation de la règle 15 (affectation)


État 62

   17 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON .

    $défaut  réduction par utilisation de la règle 17 (print)


État 63

   18 print: PRINTF OPEN_PARENT name CLOSE_PARENT SEMICOLON .

    $défaut  réduction par utilisation de la règle 18 (print)


État 64

   14 affectation: type name EQUAL value SEMICOLON .

    $défaut  réduction par utilisation de la règle 14 (affectation)


État 65

   23 operation: operation . signs operation
   23          | operation signs operation .

    PLUS      décalage et aller à l'état 55
    MINUS     décalage et aller à l'état 56
    MULTIPLY  décalage et aller à l'état 57
    DIVIDE    décalage et aller à l'état 58

    PLUS      [réduction par utilisation de la règle 23 (operation)]
    MINUS     [réduction par utilisation de la règle 23 (operation)]
    MULTIPLY  [réduction par utilisation de la règle 23 (operation)]
    DIVIDE    [réduction par utilisation de la règle 23 (operation)]
    $défaut  réduction par utilisation de la règle 23 (operation)

    signs  aller à l'état 60


État 66

   24 operation: value .

    $défaut  réduction par utilisation de la règle 24 (operation)

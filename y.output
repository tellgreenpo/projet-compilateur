Non-terminaux inutiles dans la grammaire

    args
    names


Terminaux inutilisés dans la grammaire

    EOL
    DOT
    OPEN_BRACKET
    CLOSE_BRACKET


Règles inutiles dans la grammaire

   32 args: value COMMA args
   33     | value
   34     | %empty

   35 names: name COMMA names
   36      | name


État 46 conflits: 1 décalage/réduction


Grammaire

    0 $accept: main_structure $end

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body

    2 body: OPEN_BRACE insts CLOSE_BRACE

    3 insts: inst insts
    4      | %empty

    5 inst: declaration
    6     | affectation
    7     | print
    8     | RETURN value SEMICOLON
    9     | RETURN name SEMICOLON

   10 params: type name COMMA params
   11       | type name
   12       | %empty

   13 declaration: type ids SEMICOLON

   14 affectation: type id EQUAL value SEMICOLON
   15            | id EQUAL value SEMICOLON
   16            | id EQUAL expr SEMICOLON

   17 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON
   18      | PRINTF OPEN_PARENT name CLOSE_PARENT SEMICOLON

   19 expr: expr PLUS divMul
   20     | expr MINUS divMul
   21     | divMul

   22 divMul: divMul MULTIPLY value
   23       | divMul DIVIDE value
   24       | value

   25 value: NUMBER

   26 type: INT
   27     | CONST INT

   28 name: ALPHA

   29 id: ALPHA

   30 ids: id COMMA ids
   31    | id


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    PLUS (258) 19
    MINUS (259) 20
    MULTIPLY (260) 22
    DIVIDE (261) 23
    EQUAL (262) 14 15 16
    MAIN (263) 1
    RETURN (264) 8 9
    PRINTF (265) 17 18
    CONST (266) 27
    EOL (267)
    DOT (268)
    COMMA (269) 10 30
    SEMICOLON (270) 8 9 13 14 15 16 17 18
    OPEN_BRACE (271) 2
    CLOSE_BRACE (272) 2
    OPEN_BRACKET (273)
    CLOSE_BRACKET (274)
    OPEN_PARENT (275) 1 17 18
    CLOSE_PARENT (276) 1 17 18
    NUMBER <nb> (277) 25
    ALPHA <str> (278) 28 29
    INT <str> (279) 26 27


Non-terminaux, suivis des règles où ils apparaissent

    $accept (25)
        à gauche: 0
    main_structure (26)
        à gauche: 1
        à droite: 0
    body (27)
        à gauche: 2
        à droite: 1
    insts (28)
        à gauche: 3 4
        à droite: 2 3
    inst (29)
        à gauche: 5 6 7 8 9
        à droite: 3
    params (30)
        à gauche: 10 11 12
        à droite: 1 10
    declaration (31)
        à gauche: 13
        à droite: 5
    affectation (32)
        à gauche: 14 15 16
        à droite: 6
    print (33)
        à gauche: 17 18
        à droite: 7
    expr <nb> (34)
        à gauche: 19 20 21
        à droite: 16 19 20
    divMul <nb> (35)
        à gauche: 22 23 24
        à droite: 19 20 21 22 23
    value <nb> (36)
        à gauche: 25
        à droite: 8 14 15 17 22 23 24
    type <nb> (37)
        à gauche: 26 27
        à droite: 1 10 11 13 14
    name <str> (38)
        à gauche: 28
        à droite: 9 10 11 18
    id <str> (39)
        à gauche: 29
        à droite: 14 15 16 30 31
    ids (40)
        à gauche: 30 31
        à droite: 13 30


État 0

    0 $accept: . main_structure $end

    CONST  décalage et aller à l'état 1
    INT    décalage et aller à l'état 2

    main_structure  aller à l'état 3
    type            aller à l'état 4


État 1

   27 type: CONST . INT

    INT  décalage et aller à l'état 5


État 2

   26 type: INT .

    $défaut  réduction par utilisation de la règle 26 (type)


État 3

    0 $accept: main_structure . $end

    $end  décalage et aller à l'état 6


État 4

    1 main_structure: type . MAIN OPEN_PARENT params CLOSE_PARENT body

    MAIN  décalage et aller à l'état 7


État 5

   27 type: CONST INT .

    $défaut  réduction par utilisation de la règle 27 (type)


État 6

    0 $accept: main_structure $end .

    $défaut  accepter


État 7

    1 main_structure: type MAIN . OPEN_PARENT params CLOSE_PARENT body

    OPEN_PARENT  décalage et aller à l'état 8


État 8

    1 main_structure: type MAIN OPEN_PARENT . params CLOSE_PARENT body

    CONST  décalage et aller à l'état 1
    INT    décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 12 (params)

    params  aller à l'état 9
    type    aller à l'état 10


État 9

    1 main_structure: type MAIN OPEN_PARENT params . CLOSE_PARENT body

    CLOSE_PARENT  décalage et aller à l'état 11


État 10

   10 params: type . name COMMA params
   11       | type . name

    ALPHA  décalage et aller à l'état 12

    name  aller à l'état 13


État 11

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT . body

    OPEN_BRACE  décalage et aller à l'état 14

    body  aller à l'état 15


État 12

   28 name: ALPHA .

    $défaut  réduction par utilisation de la règle 28 (name)


État 13

   10 params: type name . COMMA params
   11       | type name .

    COMMA  décalage et aller à l'état 16

    $défaut  réduction par utilisation de la règle 11 (params)


État 14

    2 body: OPEN_BRACE . insts CLOSE_BRACE

    RETURN  décalage et aller à l'état 17
    PRINTF  décalage et aller à l'état 18
    CONST   décalage et aller à l'état 1
    ALPHA   décalage et aller à l'état 19
    INT     décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 4 (insts)

    insts        aller à l'état 20
    inst         aller à l'état 21
    declaration  aller à l'état 22
    affectation  aller à l'état 23
    print        aller à l'état 24
    type         aller à l'état 25
    id           aller à l'état 26


État 15

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body .

    $défaut  réduction par utilisation de la règle 1 (main_structure)


État 16

   10 params: type name COMMA . params

    CONST  décalage et aller à l'état 1
    INT    décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 12 (params)

    params  aller à l'état 27
    type    aller à l'état 10


État 17

    8 inst: RETURN . value SEMICOLON
    9     | RETURN . name SEMICOLON

    NUMBER  décalage et aller à l'état 28
    ALPHA   décalage et aller à l'état 12

    value  aller à l'état 29
    name   aller à l'état 30


État 18

   17 print: PRINTF . OPEN_PARENT value CLOSE_PARENT SEMICOLON
   18      | PRINTF . OPEN_PARENT name CLOSE_PARENT SEMICOLON

    OPEN_PARENT  décalage et aller à l'état 31


État 19

   29 id: ALPHA .

    $défaut  réduction par utilisation de la règle 29 (id)


État 20

    2 body: OPEN_BRACE insts . CLOSE_BRACE

    CLOSE_BRACE  décalage et aller à l'état 32


État 21

    3 insts: inst . insts

    RETURN  décalage et aller à l'état 17
    PRINTF  décalage et aller à l'état 18
    CONST   décalage et aller à l'état 1
    ALPHA   décalage et aller à l'état 19
    INT     décalage et aller à l'état 2

    $défaut  réduction par utilisation de la règle 4 (insts)

    insts        aller à l'état 33
    inst         aller à l'état 21
    declaration  aller à l'état 22
    affectation  aller à l'état 23
    print        aller à l'état 24
    type         aller à l'état 25
    id           aller à l'état 26


État 22

    5 inst: declaration .

    $défaut  réduction par utilisation de la règle 5 (inst)


État 23

    6 inst: affectation .

    $défaut  réduction par utilisation de la règle 6 (inst)


État 24

    7 inst: print .

    $défaut  réduction par utilisation de la règle 7 (inst)


État 25

   13 declaration: type . ids SEMICOLON
   14 affectation: type . id EQUAL value SEMICOLON

    ALPHA  décalage et aller à l'état 19

    id   aller à l'état 34
    ids  aller à l'état 35


État 26

   15 affectation: id . EQUAL value SEMICOLON
   16            | id . EQUAL expr SEMICOLON

    EQUAL  décalage et aller à l'état 36


État 27

   10 params: type name COMMA params .

    $défaut  réduction par utilisation de la règle 10 (params)


État 28

   25 value: NUMBER .

    $défaut  réduction par utilisation de la règle 25 (value)


État 29

    8 inst: RETURN value . SEMICOLON

    SEMICOLON  décalage et aller à l'état 37


État 30

    9 inst: RETURN name . SEMICOLON

    SEMICOLON  décalage et aller à l'état 38


État 31

   17 print: PRINTF OPEN_PARENT . value CLOSE_PARENT SEMICOLON
   18      | PRINTF OPEN_PARENT . name CLOSE_PARENT SEMICOLON

    NUMBER  décalage et aller à l'état 28
    ALPHA   décalage et aller à l'état 12

    value  aller à l'état 39
    name   aller à l'état 40


État 32

    2 body: OPEN_BRACE insts CLOSE_BRACE .

    $défaut  réduction par utilisation de la règle 2 (body)


État 33

    3 insts: inst insts .

    $défaut  réduction par utilisation de la règle 3 (insts)


État 34

   14 affectation: type id . EQUAL value SEMICOLON
   30 ids: id . COMMA ids
   31    | id .

    EQUAL  décalage et aller à l'état 41
    COMMA  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 31 (ids)


État 35

   13 declaration: type ids . SEMICOLON

    SEMICOLON  décalage et aller à l'état 43


État 36

   15 affectation: id EQUAL . value SEMICOLON
   16            | id EQUAL . expr SEMICOLON

    NUMBER  décalage et aller à l'état 28

    expr    aller à l'état 44
    divMul  aller à l'état 45
    value   aller à l'état 46


État 37

    8 inst: RETURN value SEMICOLON .

    $défaut  réduction par utilisation de la règle 8 (inst)


État 38

    9 inst: RETURN name SEMICOLON .

    $défaut  réduction par utilisation de la règle 9 (inst)


État 39

   17 print: PRINTF OPEN_PARENT value . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  décalage et aller à l'état 47


État 40

   18 print: PRINTF OPEN_PARENT name . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  décalage et aller à l'état 48


État 41

   14 affectation: type id EQUAL . value SEMICOLON

    NUMBER  décalage et aller à l'état 28

    value  aller à l'état 49


État 42

   30 ids: id COMMA . ids

    ALPHA  décalage et aller à l'état 19

    id   aller à l'état 50
    ids  aller à l'état 51


État 43

   13 declaration: type ids SEMICOLON .

    $défaut  réduction par utilisation de la règle 13 (declaration)


État 44

   16 affectation: id EQUAL expr . SEMICOLON
   19 expr: expr . PLUS divMul
   20     | expr . MINUS divMul

    PLUS       décalage et aller à l'état 52
    MINUS      décalage et aller à l'état 53
    SEMICOLON  décalage et aller à l'état 54


État 45

   21 expr: divMul .
   22 divMul: divMul . MULTIPLY value
   23       | divMul . DIVIDE value

    MULTIPLY  décalage et aller à l'état 55
    DIVIDE    décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 21 (expr)


État 46

   15 affectation: id EQUAL value . SEMICOLON
   24 divMul: value .

    SEMICOLON  décalage et aller à l'état 57

    SEMICOLON  [réduction par utilisation de la règle 24 (divMul)]
    $défaut   réduction par utilisation de la règle 24 (divMul)


État 47

   17 print: PRINTF OPEN_PARENT value CLOSE_PARENT . SEMICOLON

    SEMICOLON  décalage et aller à l'état 58


État 48

   18 print: PRINTF OPEN_PARENT name CLOSE_PARENT . SEMICOLON

    SEMICOLON  décalage et aller à l'état 59


État 49

   14 affectation: type id EQUAL value . SEMICOLON

    SEMICOLON  décalage et aller à l'état 60


État 50

   30 ids: id . COMMA ids
   31    | id .

    COMMA  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 31 (ids)


État 51

   30 ids: id COMMA ids .

    $défaut  réduction par utilisation de la règle 30 (ids)


État 52

   19 expr: expr PLUS . divMul

    NUMBER  décalage et aller à l'état 28

    divMul  aller à l'état 61
    value   aller à l'état 62


État 53

   20 expr: expr MINUS . divMul

    NUMBER  décalage et aller à l'état 28

    divMul  aller à l'état 63
    value   aller à l'état 62


État 54

   16 affectation: id EQUAL expr SEMICOLON .

    $défaut  réduction par utilisation de la règle 16 (affectation)


État 55

   22 divMul: divMul MULTIPLY . value

    NUMBER  décalage et aller à l'état 28

    value  aller à l'état 64


État 56

   23 divMul: divMul DIVIDE . value

    NUMBER  décalage et aller à l'état 28

    value  aller à l'état 65


État 57

   15 affectation: id EQUAL value SEMICOLON .

    $défaut  réduction par utilisation de la règle 15 (affectation)


État 58

   17 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON .

    $défaut  réduction par utilisation de la règle 17 (print)


État 59

   18 print: PRINTF OPEN_PARENT name CLOSE_PARENT SEMICOLON .

    $défaut  réduction par utilisation de la règle 18 (print)


État 60

   14 affectation: type id EQUAL value SEMICOLON .

    $défaut  réduction par utilisation de la règle 14 (affectation)


État 61

   19 expr: expr PLUS divMul .
   22 divMul: divMul . MULTIPLY value
   23       | divMul . DIVIDE value

    MULTIPLY  décalage et aller à l'état 55
    DIVIDE    décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 19 (expr)


État 62

   24 divMul: value .

    $défaut  réduction par utilisation de la règle 24 (divMul)


État 63

   20 expr: expr MINUS divMul .
   22 divMul: divMul . MULTIPLY value
   23       | divMul . DIVIDE value

    MULTIPLY  décalage et aller à l'état 55
    DIVIDE    décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 20 (expr)


État 64

   22 divMul: divMul MULTIPLY value .

    $défaut  réduction par utilisation de la règle 22 (divMul)


État 65

   23 divMul: divMul DIVIDE value .

    $défaut  réduction par utilisation de la règle 23 (divMul)

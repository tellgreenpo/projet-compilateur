Non-terminaux inutiles dans la grammaire

    args


Terminaux inutilisés dans la grammaire

    EOL
    DOT
    OPEN_BRACKET
    CLOSE_BRACKET


Règles inutiles dans la grammaire

   32 args: value COMMA args
   33     | value
   34     | %empty


État 12 conflits: 1 décalage/réduction
État 19 conflits: 1 décalage/réduction
État 46 conflits: 1 décalage/réduction
État 62 conflits: 4 décalage/réduction


Grammaire

    0 $accept: main_structure $end

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body

    2 body: OPEN_BRACE insts CLOSE_BRACE

    3 insts: inst insts
    4      | %empty

    5 inst: declaration
    6     | affectation
    7     | print
    8     | RETURN value SEMICOLON
    9     | RETURN name SEMICOLON

   10 params: type name COMMA params
   11       | type name
   12       | %empty

   13 declaration: type names SEMICOLON
   14            | CONST type names SEMICOLON

   15 affectation: type name EQUAL value SEMICOLON
   16            | name EQUAL value SEMICOLON
   17            | name EQUAL operation SEMICOLON

   18 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON
   19      | PRINTF OPEN_PARENT name CLOSE_PARENT SEMICOLON

   20 signs: PLUS
   21      | MINUS
   22      | MULTIPLY
   23      | DIVIDE

   24 operation: operation signs operation
   25          | value

   26 value: NUMBER

   27 type: INT
   28     | %empty

   29 name: ALPHA

   30 names: name COMMA names
   31      | name


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    error (256)
    PLUS (258) 20
    MINUS (259) 21
    MULTIPLY (260) 22
    DIVIDE (261) 23
    EQUAL (262) 15 16 17
    INT (263) 27
    MAIN (264) 1
    RETURN (265) 8 9
    PRINTF (266) 18 19
    CONST (267) 14
    EOL (268)
    DOT (269)
    COMMA (270) 10 30
    SEMICOLON (271) 8 9 13 14 15 16 17 18 19
    OPEN_BRACE (272) 2
    CLOSE_BRACE (273) 2
    OPEN_BRACKET (274)
    CLOSE_BRACKET (275)
    OPEN_PARENT (276) 1 18 19
    CLOSE_PARENT (277) 1 18 19
    NUMBER <nb> (278) 26
    ALPHA <str> (279) 29


Non-terminaux, suivis des règles où ils apparaissent

    $accept (25)
        à gauche: 0
    main_structure (26)
        à gauche: 1
        à droite: 0
    body (27)
        à gauche: 2
        à droite: 1
    insts (28)
        à gauche: 3 4
        à droite: 2 3
    inst (29)
        à gauche: 5 6 7 8 9
        à droite: 3
    params (30)
        à gauche: 10 11 12
        à droite: 1 10
    declaration (31)
        à gauche: 13 14
        à droite: 5
    affectation (32)
        à gauche: 15 16 17
        à droite: 6
    print (33)
        à gauche: 18 19
        à droite: 7
    signs (34)
        à gauche: 20 21 22 23
        à droite: 24
    operation (35)
        à gauche: 24 25
        à droite: 17 24
    value <nb> (36)
        à gauche: 26
        à droite: 8 15 16 18 25
    type (37)
        à gauche: 27 28
        à droite: 1 10 11 13 14 15
    name <str> (38)
        à gauche: 29
        à droite: 9 10 11 15 16 17 19 30 31
    names (39)
        à gauche: 30 31
        à droite: 13 14 30


État 0

    0 $accept: . main_structure $end

    INT  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 28 (type)

    main_structure  aller à l'état 2
    type            aller à l'état 3


État 1

   27 type: INT .

    $défaut  réduction par utilisation de la règle 27 (type)


État 2

    0 $accept: main_structure . $end

    $end  décalage et aller à l'état 4


État 3

    1 main_structure: type . MAIN OPEN_PARENT params CLOSE_PARENT body

    MAIN  décalage et aller à l'état 5


État 4

    0 $accept: main_structure $end .

    $défaut  accepter


État 5

    1 main_structure: type MAIN . OPEN_PARENT params CLOSE_PARENT body

    OPEN_PARENT  décalage et aller à l'état 6


État 6

    1 main_structure: type MAIN OPEN_PARENT . params CLOSE_PARENT body

    INT  décalage et aller à l'état 1

    ALPHA     réduction par utilisation de la règle 28 (type)
    $défaut  réduction par utilisation de la règle 12 (params)

    params  aller à l'état 7
    type    aller à l'état 8


État 7

    1 main_structure: type MAIN OPEN_PARENT params . CLOSE_PARENT body

    CLOSE_PARENT  décalage et aller à l'état 9


État 8

   10 params: type . name COMMA params
   11       | type . name

    ALPHA  décalage et aller à l'état 10

    name  aller à l'état 11


État 9

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT . body

    OPEN_BRACE  décalage et aller à l'état 12

    body  aller à l'état 13


État 10

   29 name: ALPHA .

    $défaut  réduction par utilisation de la règle 29 (name)


État 11

   10 params: type name . COMMA params
   11       | type name .

    COMMA  décalage et aller à l'état 14

    $défaut  réduction par utilisation de la règle 11 (params)


État 12

    2 body: OPEN_BRACE . insts CLOSE_BRACE

    INT     décalage et aller à l'état 1
    RETURN  décalage et aller à l'état 15
    PRINTF  décalage et aller à l'état 16
    CONST   décalage et aller à l'état 17
    ALPHA   décalage et aller à l'état 10

    ALPHA     [réduction par utilisation de la règle 28 (type)]
    $défaut  réduction par utilisation de la règle 4 (insts)

    insts        aller à l'état 18
    inst         aller à l'état 19
    declaration  aller à l'état 20
    affectation  aller à l'état 21
    print        aller à l'état 22
    type         aller à l'état 23
    name         aller à l'état 24


État 13

    1 main_structure: type MAIN OPEN_PARENT params CLOSE_PARENT body .

    $défaut  réduction par utilisation de la règle 1 (main_structure)


État 14

   10 params: type name COMMA . params

    INT  décalage et aller à l'état 1

    ALPHA     réduction par utilisation de la règle 28 (type)
    $défaut  réduction par utilisation de la règle 12 (params)

    params  aller à l'état 25
    type    aller à l'état 8


État 15

    8 inst: RETURN . value SEMICOLON
    9     | RETURN . name SEMICOLON

    NUMBER  décalage et aller à l'état 26
    ALPHA   décalage et aller à l'état 10

    value  aller à l'état 27
    name   aller à l'état 28


État 16

   18 print: PRINTF . OPEN_PARENT value CLOSE_PARENT SEMICOLON
   19      | PRINTF . OPEN_PARENT name CLOSE_PARENT SEMICOLON

    OPEN_PARENT  décalage et aller à l'état 29


État 17

   14 declaration: CONST . type names SEMICOLON

    INT  décalage et aller à l'état 1

    $défaut  réduction par utilisation de la règle 28 (type)

    type  aller à l'état 30


État 18

    2 body: OPEN_BRACE insts . CLOSE_BRACE

    CLOSE_BRACE  décalage et aller à l'état 31


État 19

    3 insts: inst . insts

    INT     décalage et aller à l'état 1
    RETURN  décalage et aller à l'état 15
    PRINTF  décalage et aller à l'état 16
    CONST   décalage et aller à l'état 17
    ALPHA   décalage et aller à l'état 10

    ALPHA     [réduction par utilisation de la règle 28 (type)]
    $défaut  réduction par utilisation de la règle 4 (insts)

    insts        aller à l'état 32
    inst         aller à l'état 19
    declaration  aller à l'état 20
    affectation  aller à l'état 21
    print        aller à l'état 22
    type         aller à l'état 23
    name         aller à l'état 24


État 20

    5 inst: declaration .

    $défaut  réduction par utilisation de la règle 5 (inst)


État 21

    6 inst: affectation .

    $défaut  réduction par utilisation de la règle 6 (inst)


État 22

    7 inst: print .

    $défaut  réduction par utilisation de la règle 7 (inst)


État 23

   13 declaration: type . names SEMICOLON
   15 affectation: type . name EQUAL value SEMICOLON

    ALPHA  décalage et aller à l'état 10

    name   aller à l'état 33
    names  aller à l'état 34


État 24

   16 affectation: name . EQUAL value SEMICOLON
   17            | name . EQUAL operation SEMICOLON

    EQUAL  décalage et aller à l'état 35


État 25

   10 params: type name COMMA params .

    $défaut  réduction par utilisation de la règle 10 (params)


État 26

   26 value: NUMBER .

    $défaut  réduction par utilisation de la règle 26 (value)


État 27

    8 inst: RETURN value . SEMICOLON

    SEMICOLON  décalage et aller à l'état 36


État 28

    9 inst: RETURN name . SEMICOLON

    SEMICOLON  décalage et aller à l'état 37


État 29

   18 print: PRINTF OPEN_PARENT . value CLOSE_PARENT SEMICOLON
   19      | PRINTF OPEN_PARENT . name CLOSE_PARENT SEMICOLON

    NUMBER  décalage et aller à l'état 26
    ALPHA   décalage et aller à l'état 10

    value  aller à l'état 38
    name   aller à l'état 39


État 30

   14 declaration: CONST type . names SEMICOLON

    ALPHA  décalage et aller à l'état 10

    name   aller à l'état 40
    names  aller à l'état 41


État 31

    2 body: OPEN_BRACE insts CLOSE_BRACE .

    $défaut  réduction par utilisation de la règle 2 (body)


État 32

    3 insts: inst insts .

    $défaut  réduction par utilisation de la règle 3 (insts)


État 33

   15 affectation: type name . EQUAL value SEMICOLON
   30 names: name . COMMA names
   31      | name .

    EQUAL  décalage et aller à l'état 42
    COMMA  décalage et aller à l'état 43

    $défaut  réduction par utilisation de la règle 31 (names)


État 34

   13 declaration: type names . SEMICOLON

    SEMICOLON  décalage et aller à l'état 44


État 35

   16 affectation: name EQUAL . value SEMICOLON
   17            | name EQUAL . operation SEMICOLON

    NUMBER  décalage et aller à l'état 26

    operation  aller à l'état 45
    value      aller à l'état 46


État 36

    8 inst: RETURN value SEMICOLON .

    $défaut  réduction par utilisation de la règle 8 (inst)


État 37

    9 inst: RETURN name SEMICOLON .

    $défaut  réduction par utilisation de la règle 9 (inst)


État 38

   18 print: PRINTF OPEN_PARENT value . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  décalage et aller à l'état 47


État 39

   19 print: PRINTF OPEN_PARENT name . CLOSE_PARENT SEMICOLON

    CLOSE_PARENT  décalage et aller à l'état 48


État 40

   30 names: name . COMMA names
   31      | name .

    COMMA  décalage et aller à l'état 43

    $défaut  réduction par utilisation de la règle 31 (names)


État 41

   14 declaration: CONST type names . SEMICOLON

    SEMICOLON  décalage et aller à l'état 49


État 42

   15 affectation: type name EQUAL . value SEMICOLON

    NUMBER  décalage et aller à l'état 26

    value  aller à l'état 50


État 43

   30 names: name COMMA . names

    ALPHA  décalage et aller à l'état 10

    name   aller à l'état 40
    names  aller à l'état 51


État 44

   13 declaration: type names SEMICOLON .

    $défaut  réduction par utilisation de la règle 13 (declaration)


État 45

   17 affectation: name EQUAL operation . SEMICOLON
   24 operation: operation . signs operation

    PLUS       décalage et aller à l'état 52
    MINUS      décalage et aller à l'état 53
    MULTIPLY   décalage et aller à l'état 54
    DIVIDE     décalage et aller à l'état 55
    SEMICOLON  décalage et aller à l'état 56

    signs  aller à l'état 57


État 46

   16 affectation: name EQUAL value . SEMICOLON
   25 operation: value .

    SEMICOLON  décalage et aller à l'état 58

    SEMICOLON  [réduction par utilisation de la règle 25 (operation)]
    $défaut   réduction par utilisation de la règle 25 (operation)


État 47

   18 print: PRINTF OPEN_PARENT value CLOSE_PARENT . SEMICOLON

    SEMICOLON  décalage et aller à l'état 59


État 48

   19 print: PRINTF OPEN_PARENT name CLOSE_PARENT . SEMICOLON

    SEMICOLON  décalage et aller à l'état 60


État 49

   14 declaration: CONST type names SEMICOLON .

    $défaut  réduction par utilisation de la règle 14 (declaration)


État 50

   15 affectation: type name EQUAL value . SEMICOLON

    SEMICOLON  décalage et aller à l'état 61


État 51

   30 names: name COMMA names .

    $défaut  réduction par utilisation de la règle 30 (names)


État 52

   20 signs: PLUS .

    $défaut  réduction par utilisation de la règle 20 (signs)


État 53

   21 signs: MINUS .

    $défaut  réduction par utilisation de la règle 21 (signs)


État 54

   22 signs: MULTIPLY .

    $défaut  réduction par utilisation de la règle 22 (signs)


État 55

   23 signs: DIVIDE .

    $défaut  réduction par utilisation de la règle 23 (signs)


État 56

   17 affectation: name EQUAL operation SEMICOLON .

    $défaut  réduction par utilisation de la règle 17 (affectation)


État 57

   24 operation: operation signs . operation

    NUMBER  décalage et aller à l'état 26

    operation  aller à l'état 62
    value      aller à l'état 63


État 58

   16 affectation: name EQUAL value SEMICOLON .

    $défaut  réduction par utilisation de la règle 16 (affectation)


État 59

   18 print: PRINTF OPEN_PARENT value CLOSE_PARENT SEMICOLON .

    $défaut  réduction par utilisation de la règle 18 (print)


État 60

   19 print: PRINTF OPEN_PARENT name CLOSE_PARENT SEMICOLON .

    $défaut  réduction par utilisation de la règle 19 (print)


État 61

   15 affectation: type name EQUAL value SEMICOLON .

    $défaut  réduction par utilisation de la règle 15 (affectation)


État 62

   24 operation: operation . signs operation
   24          | operation signs operation .

    PLUS      décalage et aller à l'état 52
    MINUS     décalage et aller à l'état 53
    MULTIPLY  décalage et aller à l'état 54
    DIVIDE    décalage et aller à l'état 55

    PLUS      [réduction par utilisation de la règle 24 (operation)]
    MINUS     [réduction par utilisation de la règle 24 (operation)]
    MULTIPLY  [réduction par utilisation de la règle 24 (operation)]
    DIVIDE    [réduction par utilisation de la règle 24 (operation)]
    $défaut  réduction par utilisation de la règle 24 (operation)

    signs  aller à l'état 57


État 63

   25 operation: value .

    $défaut  réduction par utilisation de la règle 25 (operation)
